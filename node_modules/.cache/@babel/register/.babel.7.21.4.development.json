{"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/tests/1_unit-tests.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"const chai = require('chai');\nconst assert = chai.assert;\nconst Solver = require('../controllers/sudoku-solver.js');\nlet solver = new Solver();\nconst testPuzzles = require('../controllers/puzzle-strings.js').puzzlesAndSolutions;\nsuite('UnitTests', () => {\n  suite('checkRowPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkRowPlacement(testPuzzles[0][0], \"D\", 4, 8), \"Upper case row index failed\");\n      assert.isTrue(solver.checkRowPlacement(testPuzzles[0][0], \"f\", 9, 4), \"Lower case row index failed\");\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkRowPlacement(testPuzzles[0][0], \"D\", 2, 1));\n    });\n  });\n  suite('checkColPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkColPlacement(testPuzzles[1][0], \"G\", 3, 1));\n      assert.isTrue(solver.checkColPlacement(testPuzzles[1][0], \"E\", 6, 2));\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkColPlacement(testPuzzles[1][0], \"b\", 4, 7));\n      assert.isFalse(solver.checkColPlacement(testPuzzles[1][0], \"C\", 6, 1));\n    });\n  });\n  suite('checkRegionPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkRegionPlacement(testPuzzles[2][0], \"C\", 6, 2));\n      assert.isTrue(solver.checkRegionPlacement(testPuzzles[2][0], \"i\", 8, 9));\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkRegionPlacement(testPuzzles[2][0], \"c\", 9, 6));\n      assert.isFalse(solver.checkRegionPlacement(testPuzzles[2][0], \"g\", 6, 3));\n    });\n  });\n  suite('findAllCellOptions tests', function () {\n    test(\"Finds inputs that don't violate sudoku rules\", function () {\n      assert.deepEqual(solver.findAllCellOptions(testPuzzles[3][0], \"A\", 1), ['3', '4']);\n    });\n  });\n  suite('checkDuplicateValue tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkDuplicateValue(testPuzzles[3][0], \"g\", 6, 2));\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkDuplicateValue(testPuzzles[3][0], \"g\", 6, 4));\n      assert.isFalse(solver.checkDuplicateValue(testPuzzles[3][0], \"f\", 6, 4));\n    });\n  });\n  suite('valadate tests', function () {\n    test('passing test', function () {\n      assert.isTrue(solver.validate([...testPuzzles[3][0]]));\n    });\n    test('failing test', function () {\n      assert.isFalse(solver.validate([...testPuzzles[5][0]]));\n    });\n  });\n  suite('solve tests', function () {\n    test('solution 0 tests', function () {\n      let test = [...testPuzzles[0][0]];\n      assert.isTrue(solver.solve(test));\n      assert.equal(test.join(\"\"), testPuzzles[0][1]);\n    });\n    test('solution 1 tests', function () {\n      let test = [...testPuzzles[1][0]];\n      assert.isTrue(solver.solve(test));\n      assert.equal(test.join(\"\"), testPuzzles[1][1]);\n    });\n    test('solution 2 tests', function () {\n      let test = [...testPuzzles[2][0]];\n      assert.isTrue(solver.solve(test));\n      assert.equal(test.join(\"\"), testPuzzles[2][1]);\n    });\n    test('solution 3 tests', function () {\n      let test = [...testPuzzles[3][0]];\n      assert.isTrue(solver.solve(test));\n      assert.equal(test.join(\"\"), testPuzzles[3][1]);\n    });\n    test('solution 4 tests', function () {\n      let test = [...testPuzzles[4][0]];\n      assert.isTrue(solver.solve(test));\n      assert.equal(test.join(\"\"), testPuzzles[4][1]);\n    });\n    test('no solution tests', function () {\n      let test = [...testPuzzles[5][0]];\n      assert.isFalse(solver.solve(test));\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chai","require","assert","Solver","solver","testPuzzles","puzzlesAndSolutions","suite","test","isTrue","checkRowPlacement","isFalse","checkColPlacement","checkRegionPlacement","deepEqual","findAllCellOptions","checkDuplicateValue","validate","solve","equal","join"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/tests/","sources":["1_unit-tests.js"],"sourcesContent":["const chai = require('chai');\nconst assert = chai.assert;\n\nconst Solver = require('../controllers/sudoku-solver.js');\nlet solver = new Solver();\nconst testPuzzles = require('../controllers/puzzle-strings.js').puzzlesAndSolutions;\n\nsuite('UnitTests', () => {\n  suite('checkRowPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkRowPlacement(testPuzzles[0][0], \"D\", 4, 8), \"Upper case row index failed\");\n      assert.isTrue(solver.checkRowPlacement(testPuzzles[0][0], \"f\", 9, 4), \"Lower case row index failed\");\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkRowPlacement(testPuzzles[0][0], \"D\", 2, 1));\n    });\n  });\n  suite('checkColPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkColPlacement(testPuzzles[1][0], \"G\", 3, 1));\n      assert.isTrue(solver.checkColPlacement(testPuzzles[1][0], \"E\", 6, 2));\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkColPlacement(testPuzzles[1][0], \"b\", 4, 7));\n      assert.isFalse(solver.checkColPlacement(testPuzzles[1][0], \"C\", 6, 1));\n    });\n  });\n  suite('checkRegionPlacement tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkRegionPlacement(testPuzzles[2][0], \"C\", 6, 2));\n      assert.isTrue(solver.checkRegionPlacement(testPuzzles[2][0], \"i\", 8, 9));\n    });\n    test('false tests', function () {\n      assert.isFalse(solver.checkRegionPlacement(testPuzzles[2][0], \"c\", 9, 6));\n      assert.isFalse(solver.checkRegionPlacement(testPuzzles[2][0], \"g\", 6, 3));\n    });\n  });\n  suite('findAllCellOptions tests', function () {\n    test(\"Finds inputs that don't violate sudoku rules\", function () {\n      assert.deepEqual(solver.findAllCellOptions(testPuzzles[3][0], \"A\", 1), ['3','4'])\n    })\n  });\n  suite('checkDuplicateValue tests', function () {\n    test('true tests', function () {\n      assert.isTrue(solver.checkDuplicateValue(testPuzzles[3][0], \"g\", 6, 2))\n    })\n    test('false tests', function () {\n      assert.isFalse(solver.checkDuplicateValue(testPuzzles[3][0], \"g\", 6, 4))\n      assert.isFalse(solver.checkDuplicateValue(testPuzzles[3][0], \"f\", 6, 4))\n    })\n  });\n  suite('valadate tests', function () {\n    test('passing test', function () {\n      assert.isTrue(solver.validate([...testPuzzles[3][0]]))\n    })\n    test('failing test', function () {\n      assert.isFalse(solver.validate([...testPuzzles[5][0]]))\n    })\n  });\n\n  suite('solve tests', function () {\n    test('solution 0 tests', function () {\n      let test = [...testPuzzles[0][0]]\n      assert.isTrue(solver.solve(test))\n      assert.equal(test.join(\"\"), testPuzzles[0][1])\n    })\n\n    test('solution 1 tests', function () {\n      let test = [...testPuzzles[1][0]]\n      assert.isTrue(solver.solve(test))\n      assert.equal(test.join(\"\"), testPuzzles[1][1])\n    })\n\n    test('solution 2 tests', function () {\n      let test = [...testPuzzles[2][0]]\n      assert.isTrue(solver.solve(test))\n      assert.equal(test.join(\"\"), testPuzzles[2][1])\n    })\n\n    test('solution 3 tests', function () {\n      let test = [...testPuzzles[3][0]]\n      assert.isTrue(solver.solve(test))\n      assert.equal(test.join(\"\"), testPuzzles[3][1])\n    })\n\n    test('solution 4 tests', function () {\n      let test = [...testPuzzles[4][0]]\n      assert.isTrue(solver.solve(test))\n      assert.equal(test.join(\"\"), testPuzzles[4][1])\n    })\n\n    test('no solution tests', function () {\n      let test = [...testPuzzles[5][0]]\n      assert.isFalse(solver.solve(test))\n    })\n  });\n});\n"],"mappings":"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"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/controllers/sudoku-solver.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"// Class that defines the related indexes for a cell index [0-80].\n// It can tell what the cells row indices, column indices, region indices, \n// adjacent rows indices (that are in the same region), adjacent \n// column indices (that are in the same region).\nclass Cell {\n  constructor(idx) {\n    //The index\n    this.idx = idx;\n\n    //The indices for the row that contain this cell.\n    let rowStart = Math.floor(idx / 9);\n    let incre = [0, 1, 2, 3, 4, 5, 6, 7, 8];\n    this.rowIdxs = incre.map(x => 9 * rowStart + x);\n\n    //The indices for the column that contain this cell.\n    let colStart = idx % 9;\n    this.colIdxs = incre.map(x => colStart + x * 9);\n\n    //The indices for the region that contain this cell.\n    let regStart = Math.floor(rowStart / 3) * 27 + Math.floor(colStart / 3) * 3;\n    this.regIdxs = incre.map(x => regStart + Math.floor(x / 3) * 9 + x % 3);\n\n    //The indices for the adjacent rows that are in this region.\n    let rowRegStart = 3 * Math.floor(rowStart / 3);\n    let next1Row = 9 * (rowRegStart + (rowStart + 1) % 3);\n    let next2Row = 9 * (rowRegStart + (rowStart + 2) % 3);\n    this.adjRegRowIdxs = [...incre.map(x => next1Row + x), ...incre.map(x => next2Row + x)];\n\n    //The indices for the adjacent columns that are in this region.\n    let colRegStart = 3 * Math.floor(colStart / 3);\n    let next1Col = colRegStart + (colStart + 1) % 3;\n    let next2Col = colRegStart + (colStart + 2) % 3;\n    this.adjRegColIdxs = [...incre.map(x => next1Col + x * 9), ...incre.map(x => next2Col + x * 9)];\n  }\n}\n\n// Class that generates all the cell values for all 80 cells.\nclass Indexer {\n  constructor() {\n    this.lookup = {};\n    for (let i = 0; i < 81; i++) {\n      this.lookup[i] = new Cell(i);\n    }\n  }\n}\n\n// Lookup for the row values to numbers [0-8].\nlet rowLookup = {\n  \"A\": 0,\n  \"B\": 1,\n  \"C\": 2,\n  \"D\": 3,\n  \"E\": 4,\n  \"F\": 5,\n  \"G\": 6,\n  \"H\": 7,\n  \"I\": 8,\n  \"a\": 0,\n  \"b\": 1,\n  \"c\": 2,\n  \"d\": 3,\n  \"e\": 4,\n  \"f\": 5,\n  \"g\": 6,\n  \"h\": 7,\n  \"i\": 8\n};\n\n// Lookup for the column values to numbers [0-8].\nlet colLookup = col => {\n  return col - 1;\n};\n\n// Maps the cell coordinates to a cell index [0-80].\nlet cellIdxMap = (row, col) => {\n  return 9 * rowLookup[row] + colLookup(col);\n};\n\n// Returns the substring of the puzzle that represents the rows.\nlet rowString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].rowIdxs.map(x => puzzleString[x]).join();\n};\n\n// Returns the substring of the puzzle that represents the columns.\nlet colString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].colIdxs.map(x => puzzleString[x]).join();\n};\n\n// Returns the substring of the puzzle that represents the region.\nlet regionString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].regIdxs.map(x => puzzleString[x]).join();\n};\n\n// Define the indexer to use in the Sudoku Solver.\nlet indexer = new Indexer();\n\n// Define the Sudoku solver.\nclass SudokuSolver {\n  // Checks if a puzzle's current inputs do not violate the rules of sudoku.\n  validate(puzzle) {\n    for (let cellIdx = 0; cellIdx < 80; cellIdx++) {\n      // If the cell has an entry.\n      if (puzzle[cellIdx] != \".\") {\n        // Get the value of the cell.\n        let k = puzzle[cellIdx];\n        // Create a trail puzzle and remove the current cell value.\n        let trailPuzzle = puzzle;\n        trailPuzzle[cellIdx] = \".\";\n        // Make a string of the puzzle.\n        let pString = trailPuzzle.join(\"\");\n        // Get the row.\n        let rString = rowString(pString, cellIdx);\n        // Get the column.\n        let cString = colString(pString, cellIdx);\n        // Get the region.\n        let reString = regionString(pString, cellIdx);\n        // Create the test regex from the cell value.\n        let re = new RegExp(k, \"g\");\n        // If the regex matches the current cell conflicts with the rules of sudoku.\n        if (re.test(rString + cString + reString)) {\n          return false;\n        }\n      }\n    }\n    // All cells passed.\n    return true;\n  }\n\n  // Checks the coordinate contains a duplicate value.\n  checkDuplicateValue(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row, column);\n    return puzzleString[cellIdx] == value;\n  }\n  // Check proposed value does not violate the sudoku row rule.\n  checkRowPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row, column);\n    // Get the puzzle substring that represents the cell's row.\n    let rString = rowString(puzzleString, cellIdx);\n    // Regex to check for the value in the row.\n    let re = new RegExp(value, \"g\");\n    return !re.test(rString);\n  }\n  // Check proposed value does not violate the sudoku column rule.\n  checkColPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row, column);\n    // Get the puzzle substring that represents the cell's column.\n    let cString = colString(puzzleString, cellIdx);\n    // Regex to check for the value in the column.\n    let re = new RegExp(value, \"g\");\n    return !re.test(cString);\n  }\n  // Check proposed value does not violate the sudoku region rule.\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row, column);\n    // Get the puzzle substring that represents the cell's region.\n    let reString = regionString(puzzleString, cellIdx);\n    // Regex to check for the value in the region.\n    let re = new RegExp(value, \"g\");\n    return !re.test(reString);\n  }\n  // Finds the values for a cell that do not violate the row, column and region rules of sudoku. Takes the coordinate.\n  findAllCellOptions(puzzleString, row, column) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row, column);\n    return this.findAllCellOptionsByCellInd(puzzleString, cellIdx);\n  }\n\n  //Finds the values for a cell that do not violate the row, column and region rules of sudoku. Takes the cell index.\n  findAllCellOptionsByCellInd(puzzleString, cellIdx) {\n    // Get the puzzle substring that represents the cell's row.\n    let rString = rowString(puzzleString, cellIdx);\n    // Get the puzzle substring that represents the cell's column.\n    let cString = colString(puzzleString, cellIdx);\n    // Get the puzzle substring that represents the cell's region.\n    let reString = regionString(puzzleString, cellIdx);\n    // Regex of all the characters not in the rows, columns and regions.\n    let re = new RegExp(\"[^\" + rString + cString + reString + \"]\", \"g\");\n    // Match with all possible values [1-9] and returns an array of the missing entries.\n    return \"123456789\".match(re);\n  }\n\n  // A brute force algorithm.\n  solve(puzzle) {\n    // Loop over the indices.\n    for (let cellIdx = 0; cellIdx < 81; cellIdx++) {\n      // If the puzzles cell is not set.\n      if (puzzle[cellIdx] == \".\") {\n        // Make the puzzle a string for matching.\n        let pString = puzzle.join(\"\");\n        // Loop over all the possible cell options.\n        for (let k = 1; k < 10; k++) {\n          // Get the puzzle substring that represents the cell's row.\n          let rString = rowString(pString, cellIdx);\n          // Get the puzzle substring that represents the cell's column.\n          let cString = colString(pString, cellIdx);\n          // Get the puzzle substring that represents the cell's region.\n          let reString = regionString(pString, cellIdx);\n          // Test the guessed value to see if it violates the row, column and region rules of sudoku.\n          let re = new RegExp(k, \"g\");\n          if (!re.test(rString + cString + reString)) {\n            // Set the puzzle value.\n            puzzle[cellIdx] = k;\n            // Now solve the new puzzle.\n            if (this.solve(puzzle)) {\n              // Signals the sub puzzles found the solution.\n              return true;\n            }\n          }\n          puzzle[cellIdx] = \".\";\n        }\n        // If all possible guesses for this cell (along with its sub puzzles) did not work, return false.\n        return false;\n      }\n    }\n    // Signals the sub puzzles found the solution.\n    return true;\n  }\n}\nmodule.exports = SudokuSolver;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["Cell","constructor","idx","rowStart","Math","floor","incre","rowIdxs","map","x","colStart","colIdxs","regStart","regIdxs","rowRegStart","next1Row","next2Row","adjRegRowIdxs","colRegStart","next1Col","next2Col","adjRegColIdxs","Indexer","lookup","i","rowLookup","colLookup","col","cellIdxMap","row","rowString","puzzleString","cellIdx","indexer","join","colString","regionString","SudokuSolver","validate","puzzle","k","trailPuzzle","pString","rString","cString","reString","re","RegExp","test","checkDuplicateValue","column","value","checkRowPlacement","checkColPlacement","checkRegionPlacement","findAllCellOptions","findAllCellOptionsByCellInd","match","solve","module","exports"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/controllers/","sources":["sudoku-solver.js"],"sourcesContent":["\n// Class that defines the related indexes for a cell index [0-80].\n// It can tell what the cells row indices, column indices, region indices, \n// adjacent rows indices (that are in the same region), adjacent \n// column indices (that are in the same region).\nclass Cell {\n  constructor(idx) {\n    //The index\n    this.idx = idx;\n\n    //The indices for the row that contain this cell.\n    let rowStart = Math.floor(idx/9);\n    let incre = [0,1,2,3,4,5,6,7,8];\n    this.rowIdxs = incre.map(x => 9*rowStart+x);\n\n    //The indices for the column that contain this cell.\n    let colStart = idx%9;\n    this.colIdxs = incre.map(x => colStart+x*9);\n\n    //The indices for the region that contain this cell.\n    let regStart = Math.floor(rowStart/3)*27 + Math.floor(colStart/3)*3;\n    this.regIdxs = incre.map(x => regStart+Math.floor(x/3)*9 + x%3);\n\n    //The indices for the adjacent rows that are in this region.\n    let rowRegStart = 3*Math.floor(rowStart/3);\n    let next1Row = 9*(rowRegStart + (rowStart+1)%3);\n    let next2Row = 9*(rowRegStart + (rowStart+2)%3);\n    this.adjRegRowIdxs = [...incre.map(x => next1Row+x) , ...incre.map(x => next2Row+x)];\n\n    //The indices for the adjacent columns that are in this region.\n    let colRegStart = 3*Math.floor(colStart/3);\n    let next1Col = colRegStart + (colStart+1)%3;\n    let next2Col = colRegStart + (colStart+2)%3;\n    this.adjRegColIdxs = [...incre.map(x => next1Col+x*9) , ...incre.map(x => next2Col+x*9)];\n  }\n}\n\n// Class that generates all the cell values for all 80 cells.\nclass Indexer {\n  constructor() {\n    this.lookup = {};\n    for (let i=0; i<81; i++) {\n       this.lookup[i] = new Cell(i);\n    }\n  }\n}\n\n// Lookup for the row values to numbers [0-8].\nlet rowLookup = {\n  \"A\":0, \"B\":1, \"C\":2, \n  \"D\":3, \"E\":4, \"F\":5, \n  \"G\":6, \"H\":7, \"I\":8,\n  \"a\":0, \"b\":1, \"c\":2,\n  \"d\":3, \"e\":4, \"f\":5, \n  \"g\":6, \"h\":7, \"i\":8\n}\n\n// Lookup for the column values to numbers [0-8].\nlet colLookup = (col) => {return col-1}\n\n// Maps the cell coordinates to a cell index [0-80].\nlet cellIdxMap = (row, col) => {\n  return 9*rowLookup[row] + colLookup(col)\n}\n\n// Returns the substring of the puzzle that represents the rows.\nlet rowString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].rowIdxs.map(x=>puzzleString[x]).join();\n}\n\n// Returns the substring of the puzzle that represents the columns.\nlet colString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].colIdxs.map(x=>puzzleString[x]).join();\n}\n\n// Returns the substring of the puzzle that represents the region.\nlet regionString = (puzzleString, cellIdx) => {\n  return indexer.lookup[cellIdx].regIdxs.map(x=>puzzleString[x]).join();\n}\n\n// Define the indexer to use in the Sudoku Solver.\nlet indexer = new Indexer();\n\n// Define the Sudoku solver.\nclass SudokuSolver {\n\n  // Checks if a puzzle's current inputs do not violate the rules of sudoku.\n  validate(puzzle) {\n    for (let cellIdx=0; cellIdx<80; cellIdx++) {\n      // If the cell has an entry.\n      if (puzzle[cellIdx] != \".\") {\n        // Get the value of the cell.\n        let k = puzzle[cellIdx];\n        // Create a trail puzzle and remove the current cell value.\n        let trailPuzzle = puzzle;\n        trailPuzzle[cellIdx] = \".\";\n        // Make a string of the puzzle.\n        let pString = trailPuzzle.join(\"\");\n        // Get the row.\n        let rString = rowString(pString, cellIdx);\n        // Get the column.\n        let cString = colString(pString, cellIdx);\n        // Get the region.\n        let reString = regionString(pString, cellIdx);\n        // Create the test regex from the cell value.\n        let re = new RegExp(k, \"g\");\n        // If the regex matches the current cell conflicts with the rules of sudoku.\n        if (re.test(rString+cString+reString)) {\n          return false;\n        }\n      }\n    }\n    // All cells passed.\n    return true;\n  }\n\n  // Checks the coordinate contains a duplicate value.\n  checkDuplicateValue(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row,column);\n    return puzzleString[cellIdx] == value;\n  }\n  // Check proposed value does not violate the sudoku row rule.\n  checkRowPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row,column);\n    // Get the puzzle substring that represents the cell's row.\n    let rString = rowString(puzzleString, cellIdx);\n    // Regex to check for the value in the row.\n    let re = new RegExp(value, \"g\");\n    return !re.test(rString);\n  }\n  // Check proposed value does not violate the sudoku column rule.\n  checkColPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row,column);\n    // Get the puzzle substring that represents the cell's column.\n    let cString = colString(puzzleString, cellIdx);\n    // Regex to check for the value in the column.\n    let re = new RegExp(value, \"g\");\n    return !re.test(cString);\n  }\n  // Check proposed value does not violate the sudoku region rule.\n  checkRegionPlacement(puzzleString, row, column, value) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row,column);\n    // Get the puzzle substring that represents the cell's region.\n    let reString = regionString(puzzleString, cellIdx);\n    // Regex to check for the value in the region.\n    let re = new RegExp(value, \"g\");\n    return !re.test(reString);\n  }\n  // Finds the values for a cell that do not violate the row, column and region rules of sudoku. Takes the coordinate.\n  findAllCellOptions(puzzleString, row, column ) {\n    // Map the coordinates to the cell index.\n    let cellIdx = cellIdxMap(row,column);\n    return this.findAllCellOptionsByCellInd(puzzleString, cellIdx);\n  }\n\n  //Finds the values for a cell that do not violate the row, column and region rules of sudoku. Takes the cell index.\n  findAllCellOptionsByCellInd(puzzleString, cellIdx) {\n    // Get the puzzle substring that represents the cell's row.\n    let rString = rowString(puzzleString, cellIdx);\n    // Get the puzzle substring that represents the cell's column.\n    let cString = colString(puzzleString, cellIdx);\n    // Get the puzzle substring that represents the cell's region.\n    let reString = regionString(puzzleString, cellIdx);\n    // Regex of all the characters not in the rows, columns and regions.\n    let re = new RegExp(\"[^\"+rString+cString+reString+\"]\", \"g\");\n    // Match with all possible values [1-9] and returns an array of the missing entries.\n    return (\"123456789\").match(re);\n  }\n\n  // A brute force algorithm.\n  solve(puzzle) {\n    // Loop over the indices.\n    for (let cellIdx=0; cellIdx<81; cellIdx++ ){\n      // If the puzzles cell is not set.\n      if (puzzle[cellIdx] == \".\") {\n        // Make the puzzle a string for matching.\n        let pString = puzzle.join(\"\");\n        // Loop over all the possible cell options.\n        for (let k=1; k<10; k++ ){\n          // Get the puzzle substring that represents the cell's row.\n          let rString = rowString(pString, cellIdx);\n          // Get the puzzle substring that represents the cell's column.\n          let cString = colString(pString, cellIdx);\n          // Get the puzzle substring that represents the cell's region.\n          let reString = regionString(pString, cellIdx);\n          // Test the guessed value to see if it violates the row, column and region rules of sudoku.\n          let re = new RegExp(k, \"g\");\n          if (!re.test(rString+cString+reString)) {\n            // Set the puzzle value.\n            puzzle[cellIdx] = k;\n            // Now solve the new puzzle.\n            if(this.solve(puzzle)) {\n              // Signals the sub puzzles found the solution.\n              return true;\n            }\n          }\n          puzzle[cellIdx] = \".\";\n        }\n        // If all possible guesses for this cell (along with its sub puzzles) did not work, return false.\n        return false;\n      }\n    }\n    // Signals the sub puzzles found the solution.\n    return true;\n  }\n}\n\nmodule.exports = SudokuSolver;"],"mappings":"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"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/controllers/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/controllers/puzzle-strings.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"const puzzlesAndSolutionsn// A puzzle with input that violates sudoku rules.\n['.7.897....5....3.4.2..4..1.5689..472...6.....1.7.5.63873.1.2.8.6..47.1..2.9.387.6'],\n// A puzzle with an invalid char.\n['82..4..6...16..89...98a15.749.157.............53..4...96.415..81..7632..3...28.51'],\n// A puzzle with too many chars.\n['82..4..6...16..89...98315.749.157.............53..4...96.415..81..7632..3...28.513..46.']];\nmodule.exports = {\n  puzzlesAndSolutions\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJwdXp6bGVzQW5kU29sdXRpb25zIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL2hvbWUvdHNlbGdlci03MDUwL0Rlc2t0b3AvZmNjL2NvbnRyb2xsZXJzLyIsInNvdXJjZXMiOlsicHV6emxlLXN0cmluZ3MuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgcHV6emxlc0FuZFNvbHV0aW9ucyA9IFtcbiAgW1xuICAgICcxLjUuLjIuODQuLjYzLjEyLjcuMi4uNS4uLi4uOS4uMS4uLi44LjIuMzY3NC4zLjcuMi4uOS40Ny4uLjguLjEuLjE2Li4uLjkyNjkxNC4zNy4nLFxuICAgICcxMzU3NjI5ODQ5NDYzODEyNTc3Mjg0NTk2MTM2OTQ1MTc4MzI4MTI5MzY3NDUzNTc4MjQxOTY0NzMyOTg1NjE1ODE2NzM0MjkyNjkxNDUzNzgnXG4gIF0sXG4gIFtcbiAgICAnNS4uOTEzNzIuMy4uLjguNS45LjkuMjUuLjguNjguNDcuMjMuLi45NS4uNDYuNy40Li4uLi41LjIuLi4uLi4uNC4uODkxNi4uODUuNzIuLi4zJyxcbiAgICAnNTY4OTEzNzI0MzQyNjg3NTE5MTk3MjU0Mzg2Njg1NDc5MjMxMjE5NTM4NDY3NzM0MTYyODk1OTI2MzQ1MTc4NDczODkxNjUyODUxNzI2OTQzJ1xuICBdLFxuICBbXG4gICAgJy4uODM5LjcuNTc1Li4uLi45NjQuLjEuLi4uLi4uMTYuMjk4NDYuOS4zMTIuNy4uNzU0Li4uLi42Mi4uNS43OC44Li4uMy4yLi4uNDkyLi4uMScsXG4gICAgJzIxODM5Njc0NTc1MzI4NDE5NjQ5NjE1NzgzMjUzMTY3Mjk4NDY0OTgzMTI1NzgyNzU0OTYxMzk2MjQxNTM3ODE4NTc2MzQyOTM3NDkyODU2MSdcbiAgXSxcbiAgW1xuICAgICcuNy44OS4uLi4uNS4uLi4zLjQuMi4uNC4uMS41Njg5Li40NzIuLi42Li4uLi4xLjcuNS42Mzg3My4xLjIuOC42Li40Ny4xLi4yLjkuMzg3LjYnLFxuICAgICc0NzM4OTEyNjU4NTE3MjYzOTQ5MjYzNDU4MTc1Njg5MTM0NzIzNDI2ODc5NTExOTcyNTQ2Mzg3MzQxNjI1ODk2ODU0NzkxMjMyMTk1Mzg3NDYnXG4gIF0sXG4gIFtcbiAgICAnODIuLjQuLjYuLi4xNi4uODkuLi45ODMxNS43NDkuMTU3Li4uLi4uLi4uLi4uLjUzLi40Li4uOTYuNDE1Li44MS4uNzYzMi4uMy4uLjI4LjUxJyxcbiAgICAnODI3NTQ5MTYzNTMxNjcyODk0NjQ5ODMxNTI3NDk2MTU3MzgyMjE4Mzk2NDc1NzUzMjg0OTE2OTYyNDE1NzM4MTg1NzYzMjQ5Mzc0OTI4NjUxJ1xuICBdLFxuICAvLyBBIHB1enpsZSB3aXRoIGlucHV0IHRoYXQgdmlvbGF0ZXMgc3Vkb2t1IHJ1bGVzLlxuICBbXG4gICAgJy43Ljg5Ny4uLi41Li4uLjMuNC4yLi40Li4xLjU2ODkuLjQ3Mi4uLjYuLi4uLjEuNy41LjYzODczLjEuMi44LjYuLjQ3LjEuLjIuOS4zODcuNidcbiAgXSxcbiAgLy8gQSBwdXp6bGUgd2l0aCBhbiBpbnZhbGlkIGNoYXIuXG4gIFtcbiAgICAnODIuLjQuLjYuLi4xNi4uODkuLi45OGExNS43NDkuMTU3Li4uLi4uLi4uLi4uLjUzLi40Li4uOTYuNDE1Li44MS4uNzYzMi4uMy4uLjI4LjUxJ1xuICBdLFxuICAvLyBBIHB1enpsZSB3aXRoIHRvbyBtYW55IGNoYXJzLlxuICBbXG4gICAgJzgyLi40Li42Li4uMTYuLjg5Li4uOTgzMTUuNzQ5LjE1Ny4uLi4uLi4uLi4uLi41My4uNC4uLjk2LjQxNS4uODEuLjc2MzIuLjMuLi4yOC41MTMuLjQ2LidcbiAgXVxuXTtcblxubW9kdWxlLmV4cG9ydHMgPSB7cHV6emxlc0FuZFNvbHV0aW9uc307Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxtQkFBbUIsR0FBRyxDQUMxQixDQUNFLG1GQUFtRixFQUNuRixtRkFBbUYsQ0FDcEYsRUFDRCxDQUNFLG1GQUFtRixFQUNuRixtRkFBbUYsQ0FDcEYsRUFDRCxDQUNFLG1GQUFtRixFQUNuRixtRkFBbUYsQ0FDcEYsRUFDRCxDQUNFLG1GQUFtRixFQUNuRixtRkFBbUYsQ0FDcEYsRUFDRCxDQUNFLG1GQUFtRixFQUNuRixtRkFBbUYsQ0FDcEY7QUFDRDtBQUNBLENBQ0UsbUZBQW1GLENBQ3BGO0FBQ0Q7QUFDQSxDQUNFLG1GQUFtRixDQUNwRjtBQUNEO0FBQ0EsQ0FDRSx5RkFBeUYsQ0FDMUYsQ0FDRjtBQUVEQyxNQUFNLENBQUNDLE9BQU8sR0FBRztFQUFDRjtBQUFtQixDQUFDIn0=","map":{"version":3,"names":["puzzlesAndSolutions","module","exports"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/controllers/","sources":["puzzle-strings.js"],"sourcesContent":["const puzzlesAndSolutions = [\n  [\n    '1.5..2.84..63.12.7.2..5.....9..1....8.2.3674.3.7.2..9.47...8..1..16....926914.37.',\n    '135762984946381257728459613694517832812936745357824196473298561581673429269145378'\n  ],\n  [\n    '5..91372.3...8.5.9.9.25..8.68.47.23...95..46.7.4.....5.2.......4..8916..85.72...3',\n    '568913724342687519197254386685479231219538467734162895926345178473891652851726943'\n  ],\n  [\n    '..839.7.575.....964..1.......16.29846.9.312.7..754.....62..5.78.8...3.2...492...1',\n    '218396745753284196496157832531672984649831257827549613962415378185763429374928561'\n  ],\n  [\n    '.7.89.....5....3.4.2..4..1.5689..472...6.....1.7.5.63873.1.2.8.6..47.1..2.9.387.6',\n    '473891265851726394926345817568913472342687951197254638734162589685479123219538746'\n  ],\n  [\n    '82..4..6...16..89...98315.749.157.............53..4...96.415..81..7632..3...28.51',\n    '827549163531672894649831527496157382218396475753284916962415738185763249374928651'\n  ],\n  // A puzzle with input that violates sudoku rules.\n  [\n    '.7.897....5....3.4.2..4..1.5689..472...6.....1.7.5.63873.1.2.8.6..47.1..2.9.387.6'\n  ],\n  // A puzzle with an invalid char.\n  [\n    '82..4..6...16..89...98a15.749.157.............53..4...96.415..81..7632..3...28.51'\n  ],\n  // A puzzle with too many chars.\n  [\n    '82..4..6...16..89...98315.749.157.............53..4...96.415..81..7632..3...28.513..46.'\n  ]\n];\n\nmodule.exports = {puzzlesAndSolutions};"],"mappings":"AAAA,MAAMA,mBAAmB,GAAG,CAC1B,CACE,mFAAmF,EACnF,mFAAmF,CACpF,EACD,CACE,mFAAmF,EACnF,mFAAmF,CACpF,EACD,CACE,mFAAmF,EACnF,mFAAmF,CACpF,EACD,CACE,mFAAmF,EACnF,mFAAmF,CACpF,EACD,CACE,mFAAmF,EACnF,mFAAmF,CACpF;AACD;AACA,CACE,mFAAmF,CACpF;AACD;AACA,CACE,mFAAmF,CACpF;AACD;AACA,CACE,yFAAyF,CAC1F,CACF;AAEDC,MAAM,CAACC,OAAO,GAAG;EAACF;AAAmB,CAAC"}},"mtime":1682147232048},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/tests/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/tests/2_functional-tests.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"const chai = require(\"chai\");\nconst chaiHttp = require('chai-http');\nconst assert = chai.assert;\nconst server = require('../server');\nconst testPuzzles = require('../controllers/puzzle-strings.js').puzzlesAndSolutions;\nchai.use(chaiHttp);\n\n/*\n  1.  Solve a puzzle with valid puzzle string: POST request to /api/solve\n  2.  Solve a puzzle with missing puzzle string: POST request to /api/solve\n  3.  Solve a puzzle with invalid characters: POST request to /api/solve\n  4.  Solve a puzzle with incorrect length: POST request to /api/solve\n  5.  Solve a puzzle that cannot be solved: POST request to /api/solve\n  6.  Check a puzzle placement with all fields: POST request to /api/check\n  7.  Check a puzzle placement with single placement conflict: POST request to /api/check\n  8.  Check a puzzle placement with multiple placement conflicts: POST request to /api/check\n  9.  Check a puzzle placement with all placement conflicts: POST request to /api/check\n  10. Check a puzzle placement with missing required fields: POST request to /api/check\n  11. Check a puzzle placement with invalid characters: POST request to /api/check\n  12. Check a puzzle placement with incorrect length: POST request to /api/check\n  13. Check a puzzle placement with invalid placement coordinate: POST request to /api/check\n  14. Check a puzzle placement with invalid placement value: POST request to /api/check\n*/\n\nsuite('Functional Tests', () => {\n  suite('Solve Tests', () => {\n    suite('Test solve POSTS /api/solve', () => {\n      // 1\n      test('1. POST a valid puzzle', done => {\n        chai.request(server).post('/api/solve').send({\n          puzzle: testPuzzles[0][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.solution, testPuzzles[0][1]);\n          done();\n        });\n      });\n      // 2\n      test('2. POST with missing input data', done => {\n        chai.request(server).post('/api/solve').end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, 'Required field missing');\n          done();\n        });\n      });\n      // 3\n      test('3. POST puzzle with invalid char', done => {\n        chai.request(server).post('/api/solve').send({\n          puzzle: testPuzzles[6][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, 'Invalid characters in puzzle');\n          done();\n        });\n      });\n      // 4\n      test('4. POST puzzle with missing input data', done => {\n        chai.request(server).post('/api/solve').send({\n          puzzle: testPuzzles[7][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, 'Expected puzzle to be 81 characters long');\n          done();\n        });\n      });\n      // 5\n      test('5. POST puzzle with insolvable puzzle', done => {\n        chai.request(server).post('/api/solve').send({\n          puzzle: testPuzzles[5][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, 'Puzzle cannot be solved');\n          done();\n        });\n      });\n    });\n  });\n  suite('Check Tests', () => {\n    suite('Test check POSTS /api/check', () => {\n      // 6\n      test('6. POST with valid inputs', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"E6\",\n          value: 2,\n          puzzle: testPuzzles[1][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.isTrue(res.body.valid);\n          done();\n        });\n      });\n      // 7\n      test('7. POST with valid inputs with a single sudoku conflict', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"B6\",\n          value: 2,\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.isFalse(res.body.valid);\n          assert.deepEqual(res.body.conflict, [\"column\"]);\n          done();\n        });\n      });\n      // 8\n      test('8. POST with valid inputs with multiple sudoku conflicts', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"B6\",\n          value: 9,\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.isFalse(res.body.valid);\n          assert.deepEqual(res.body.conflict, [\"row\", \"region\"]);\n          done();\n        });\n      });\n      // 9\n      test('9. POST with valid inputs with all sudoku conflicts', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"F8\",\n          value: 7,\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.isFalse(res.body.valid);\n          assert.deepEqual(res.body.conflict, [\"row\", \"column\", \"region\"]);\n          done();\n        });\n      });\n      // 10\n      test('10. POST with missing required fields', done => {\n        chai.request(server).post('/api/check').send({\n          value: 7,\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, \"Required field(s) missing\");\n          done();\n        });\n      });\n      // 11\n      test('11. POST with invalid characters', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"F8\",\n          value: \"fsda\",\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, \"Invalid value\");\n          done();\n        });\n      });\n      // 12\n      test('12. POST with a puzzle with with incorrect length', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"F8\",\n          value: \"1\",\n          puzzle: testPuzzles[7][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\");\n          done();\n        });\n      });\n      // 13\n      test('13. POST with a puzzle with with incorrect length', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"F8\",\n          value: \"1\",\n          puzzle: testPuzzles[7][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\");\n          done();\n        });\n      });\n      // 14\n      test('14. POST with invalid placement value', done => {\n        chai.request(server).post('/api/check').send({\n          coordinate: \"d5\",\n          value: \"aad\",\n          puzzle: testPuzzles[2][0]\n        }).end((err, res) => {\n          assert.equal(res.status, 200);\n          assert.equal(res.body.error, \"Invalid value\");\n          done();\n        });\n      });\n    });\n  });\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["chai","require","chaiHttp","assert","server","testPuzzles","puzzlesAndSolutions","use","suite","test","done","request","post","send","puzzle","end","err","res","equal","status","body","solution","error","coordinate","value","isTrue","valid","isFalse","deepEqual","conflict"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/tests/","sources":["2_functional-tests.js"],"sourcesContent":["const chai = require(\"chai\");\nconst chaiHttp = require('chai-http');\nconst assert = chai.assert;\nconst server = require('../server');\nconst testPuzzles = require('../controllers/puzzle-strings.js').puzzlesAndSolutions;\n\nchai.use(chaiHttp);\n\n/*\n  1.  Solve a puzzle with valid puzzle string: POST request to /api/solve\n  2.  Solve a puzzle with missing puzzle string: POST request to /api/solve\n  3.  Solve a puzzle with invalid characters: POST request to /api/solve\n  4.  Solve a puzzle with incorrect length: POST request to /api/solve\n  5.  Solve a puzzle that cannot be solved: POST request to /api/solve\n  6.  Check a puzzle placement with all fields: POST request to /api/check\n  7.  Check a puzzle placement with single placement conflict: POST request to /api/check\n  8.  Check a puzzle placement with multiple placement conflicts: POST request to /api/check\n  9.  Check a puzzle placement with all placement conflicts: POST request to /api/check\n  10. Check a puzzle placement with missing required fields: POST request to /api/check\n  11. Check a puzzle placement with invalid characters: POST request to /api/check\n  12. Check a puzzle placement with incorrect length: POST request to /api/check\n  13. Check a puzzle placement with invalid placement coordinate: POST request to /api/check\n  14. Check a puzzle placement with invalid placement value: POST request to /api/check\n*/\n\nsuite('Functional Tests', () => {\n  suite('Solve Tests', () => {\n    suite('Test solve POSTS /api/solve', () => {\n      // 1\n      test('1. POST a valid puzzle', (done) => {\n        chai\n          .request(server)\n          .post('/api/solve')\n          .send({\n            puzzle: testPuzzles[0][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.solution, testPuzzles[0][1])\n            done()\n          })\n      })\n      // 2\n      test('2. POST with missing input data', (done) => {\n        chai\n          .request(server)\n          .post('/api/solve')\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, 'Required field missing')\n            done()\n          })\n      })\n      // 3\n      test('3. POST puzzle with invalid char', (done) => {\n        chai\n          .request(server)\n          .post('/api/solve')\n          .send({\n            puzzle: testPuzzles[6][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, 'Invalid characters in puzzle')\n            done()\n          })\n      })\n      // 4\n      test('4. POST puzzle with missing input data', (done) => {\n        chai\n          .request(server)\n          .post('/api/solve')\n          .send({\n            puzzle: testPuzzles[7][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, 'Expected puzzle to be 81 characters long')\n            done()\n          })\n      })\n      // 5\n      test('5. POST puzzle with insolvable puzzle', (done) => {\n        chai\n          .request(server)\n          .post('/api/solve')\n          .send({\n            puzzle: testPuzzles[5][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, 'Puzzle cannot be solved')\n            done()\n          })\n      })\n    })\n  })\n\n  suite('Check Tests', () => {\n    suite('Test check POSTS /api/check', () => {\n      // 6\n      test('6. POST with valid inputs', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"E6\",\n            value: 2,\n            puzzle: testPuzzles[1][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.isTrue(res.body.valid)\n            done()\n          })\n      })\n      // 7\n      test('7. POST with valid inputs with a single sudoku conflict', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"B6\",\n            value: 2,\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.isFalse(res.body.valid)\n            assert.deepEqual(res.body.conflict, [\"column\"])\n            done()\n          })\n      })\n      // 8\n      test('8. POST with valid inputs with multiple sudoku conflicts', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"B6\",\n            value: 9,\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.isFalse(res.body.valid)\n            assert.deepEqual(res.body.conflict, [ \"row\", \"region\" ])\n            done()\n          })\n      })\n      // 9\n      test('9. POST with valid inputs with all sudoku conflicts', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"F8\",\n            value: 7,\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.isFalse(res.body.valid)\n            assert.deepEqual(res.body.conflict, [  \"row\", \"column\", \"region\" ])\n            done()\n          })\n      })\n      // 10\n      test('10. POST with missing required fields', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            value: 7,\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, \"Required field(s) missing\")\n            done()\n          })\n      })\n      // 11\n      test('11. POST with invalid characters', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"F8\",\n            value: \"fsda\",\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, \"Invalid value\")\n            done()\n          })\n      })\n      // 12\n      test('12. POST with a puzzle with with incorrect length', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"F8\",\n            value: \"1\",\n            puzzle: testPuzzles[7][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\")\n            done()\n          })\n      })\n      // 13\n      test('13. POST with a puzzle with with incorrect length', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"F8\",\n            value: \"1\",\n            puzzle: testPuzzles[7][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, \"Expected puzzle to be 81 characters long\")\n            done()\n          })\n      })\n      // 14\n      test('14. POST with invalid placement value', (done) => {\n        chai\n          .request(server)\n          .post('/api/check')\n          .send({\n            coordinate: \"d5\",\n            value: \"aad\",\n            puzzle: testPuzzles[2][0]\n          })\n          .end((err, res)=>{\n            assert.equal(res.status, 200);\n            assert.equal(res.body.error, \"Invalid value\")\n            done()\n          })\n      })\n    })\n  })\n});\n\n"],"mappings":"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"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:development":{"value":{"code":"require('dotenv').config();\nconst express = require('express');\nconst bodyParser = require('body-parser');\nconst expect = require('chai').expect;\nconst cors = require('cors');\nconst fccTestingRoutes = require('./routes/fcctesting.js');\nconst apiRoutes = require('./routes/api.js');\nconst runner = require('./test-runner');\nconst app = express();\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({\n  origin: '*'\n})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({\n  extended: true\n}));\n\n//Index page (static HTML)\napp.route('/').get(function (req, res) {\n  res.sendFile(process.cwd() + '/views/index.html');\n});\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n// User routes\napiRoutes(app);\n\n//404 Not Found Middleware\napp.use(function (req, res, next) {\n  res.status(404).type('text').send('Not Found');\n});\n\n//Start our server and tests!\nconst PORT = process.env.PORT || 3000;\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT);\n  // process.env.NODE_ENV='test'\n  if (process.env.NODE_ENV === 'test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\nmodule.exports = app; // for testing\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyZXF1aXJlIiwiY29uZmlnIiwiZXhwcmVzcyIsImJvZHlQYXJzZXIiLCJleHBlY3QiLCJjb3JzIiwiZmNjVGVzdGluZ1JvdXRlcyIsImFwaVJvdXRlcyIsInJ1bm5lciIsImFwcCIsInVzZSIsInN0YXRpYyIsInByb2Nlc3MiLCJjd2QiLCJvcmlnaW4iLCJqc29uIiwidXJsZW5jb2RlZCIsImV4dGVuZGVkIiwicm91dGUiLCJnZXQiLCJyZXEiLCJyZXMiLCJzZW5kRmlsZSIsIm5leHQiLCJzdGF0dXMiLCJ0eXBlIiwic2VuZCIsIlBPUlQiLCJlbnYiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwiTk9ERV9FTlYiLCJzZXRUaW1lb3V0IiwicnVuIiwiZXJyb3IiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS90c2VsZ2VyLTcwNTAvRGVza3RvcC9mY2MvIiwic291cmNlcyI6WyJzZXJ2ZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsicmVxdWlyZSgnZG90ZW52JykuY29uZmlnKCk7XG5jb25zdCBleHByZXNzICAgICA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcbmNvbnN0IGJvZHlQYXJzZXIgID0gcmVxdWlyZSgnYm9keS1wYXJzZXInKTtcbmNvbnN0IGV4cGVjdCAgICAgID0gcmVxdWlyZSgnY2hhaScpLmV4cGVjdDtcbmNvbnN0IGNvcnMgICAgICAgID0gcmVxdWlyZSgnY29ycycpO1xuXG5jb25zdCBmY2NUZXN0aW5nUm91dGVzICA9IHJlcXVpcmUoJy4vcm91dGVzL2ZjY3Rlc3RpbmcuanMnKTtcbmNvbnN0IGFwaVJvdXRlcyAgICAgICAgID0gcmVxdWlyZSgnLi9yb3V0ZXMvYXBpLmpzJyk7XG5jb25zdCBydW5uZXIgICAgICAgICAgICA9IHJlcXVpcmUoJy4vdGVzdC1ydW5uZXInKTtcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuXG5hcHAudXNlKCcvcHVibGljJywgZXhwcmVzcy5zdGF0aWMocHJvY2Vzcy5jd2QoKSArICcvcHVibGljJykpO1xuYXBwLnVzZShjb3JzKHtvcmlnaW46ICcqJ30pKTsgLy9Gb3IgRkNDIHRlc3RpbmcgcHVycG9zZXMgb25seVxuXG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcbmFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgZXh0ZW5kZWQ6IHRydWUgfSkpO1xuXG4vL0luZGV4IHBhZ2UgKHN0YXRpYyBIVE1MKVxuYXBwLnJvdXRlKCcvJylcbiAgLmdldChmdW5jdGlvbiAocmVxLCByZXMpIHtcbiAgICByZXMuc2VuZEZpbGUocHJvY2Vzcy5jd2QoKSArICcvdmlld3MvaW5kZXguaHRtbCcpO1xuICB9KTtcblxuLy9Gb3IgRkNDIHRlc3RpbmcgcHVycG9zZXNcbmZjY1Rlc3RpbmdSb3V0ZXMoYXBwKTtcblxuLy8gVXNlciByb3V0ZXNcbmFwaVJvdXRlcyhhcHApO1xuICAgIFxuLy80MDQgTm90IEZvdW5kIE1pZGRsZXdhcmVcbmFwcC51c2UoZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHtcbiAgcmVzLnN0YXR1cyg0MDQpXG4gICAgLnR5cGUoJ3RleHQnKVxuICAgIC5zZW5kKCdOb3QgRm91bmQnKTtcbn0pO1xuXG4vL1N0YXJ0IG91ciBzZXJ2ZXIgYW5kIHRlc3RzIVxuY29uc3QgUE9SVCA9IHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMFxuYXBwLmxpc3RlbihQT1JULCBmdW5jdGlvbiAoKSB7XG4gIGNvbnNvbGUubG9nKFwiTGlzdGVuaW5nIG9uIHBvcnQgXCIgKyBQT1JUKTtcbiAgLy8gcHJvY2Vzcy5lbnYuTk9ERV9FTlY9J3Rlc3QnXG4gIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOVj09PSd0ZXN0Jykge1xuICAgIGNvbnNvbGUubG9nKCdSdW5uaW5nIFRlc3RzLi4uJyk7XG4gICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICB0cnkge1xuICAgICAgICBydW5uZXIucnVuKCk7XG4gICAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgICBjb25zb2xlLmxvZygnVGVzdHMgYXJlIG5vdCB2YWxpZDonKTtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICB9XG4gICAgfSwgMTUwMCk7XG4gIH1cbn0pO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGFwcDsgLy8gZm9yIHRlc3RpbmdcbiJdLCJtYXBwaW5ncyI6IkFBQUFBLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQ0MsTUFBTSxFQUFFO0FBQzFCLE1BQU1DLE9BQU8sR0FBT0YsT0FBTyxDQUFDLFNBQVMsQ0FBQztBQUN0QyxNQUFNRyxVQUFVLEdBQUlILE9BQU8sQ0FBQyxhQUFhLENBQUM7QUFDMUMsTUFBTUksTUFBTSxHQUFRSixPQUFPLENBQUMsTUFBTSxDQUFDLENBQUNJLE1BQU07QUFDMUMsTUFBTUMsSUFBSSxHQUFVTCxPQUFPLENBQUMsTUFBTSxDQUFDO0FBRW5DLE1BQU1NLGdCQUFnQixHQUFJTixPQUFPLENBQUMsd0JBQXdCLENBQUM7QUFDM0QsTUFBTU8sU0FBUyxHQUFXUCxPQUFPLENBQUMsaUJBQWlCLENBQUM7QUFDcEQsTUFBTVEsTUFBTSxHQUFjUixPQUFPLENBQUMsZUFBZSxDQUFDO0FBRWxELE1BQU1TLEdBQUcsR0FBR1AsT0FBTyxFQUFFO0FBRXJCTyxHQUFHLENBQUNDLEdBQUcsQ0FBQyxTQUFTLEVBQUVSLE9BQU8sQ0FBQ1MsTUFBTSxDQUFDQyxPQUFPLENBQUNDLEdBQUcsRUFBRSxHQUFHLFNBQVMsQ0FBQyxDQUFDO0FBQzdESixHQUFHLENBQUNDLEdBQUcsQ0FBQ0wsSUFBSSxDQUFDO0VBQUNTLE1BQU0sRUFBRTtBQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzs7QUFFOUJMLEdBQUcsQ0FBQ0MsR0FBRyxDQUFDUCxVQUFVLENBQUNZLElBQUksRUFBRSxDQUFDO0FBQzFCTixHQUFHLENBQUNDLEdBQUcsQ0FBQ1AsVUFBVSxDQUFDYSxVQUFVLENBQUM7RUFBRUMsUUFBUSxFQUFFO0FBQUssQ0FBQyxDQUFDLENBQUM7O0FBRWxEO0FBQ0FSLEdBQUcsQ0FBQ1MsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUNYQyxHQUFHLENBQUMsVUFBVUMsR0FBRyxFQUFFQyxHQUFHLEVBQUU7RUFDdkJBLEdBQUcsQ0FBQ0MsUUFBUSxDQUFDVixPQUFPLENBQUNDLEdBQUcsRUFBRSxHQUFHLG1CQUFtQixDQUFDO0FBQ25ELENBQUMsQ0FBQzs7QUFFSjtBQUNBUCxnQkFBZ0IsQ0FBQ0csR0FBRyxDQUFDOztBQUVyQjtBQUNBRixTQUFTLENBQUNFLEdBQUcsQ0FBQzs7QUFFZDtBQUNBQSxHQUFHLENBQUNDLEdBQUcsQ0FBQyxVQUFTVSxHQUFHLEVBQUVDLEdBQUcsRUFBRUUsSUFBSSxFQUFFO0VBQy9CRixHQUFHLENBQUNHLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FDWkMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUNaQyxJQUFJLENBQUMsV0FBVyxDQUFDO0FBQ3RCLENBQUMsQ0FBQzs7QUFFRjtBQUNBLE1BQU1DLElBQUksR0FBR2YsT0FBTyxDQUFDZ0IsR0FBRyxDQUFDRCxJQUFJLElBQUksSUFBSTtBQUNyQ2xCLEdBQUcsQ0FBQ29CLE1BQU0sQ0FBQ0YsSUFBSSxFQUFFLFlBQVk7RUFDM0JHLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLG9CQUFvQixHQUFHSixJQUFJLENBQUM7RUFDeEM7RUFDQSxJQUFJZixPQUFPLENBQUNnQixHQUFHLENBQUNJLFFBQVEsS0FBRyxNQUFNLEVBQUU7SUFDakNGLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLGtCQUFrQixDQUFDO0lBQy9CRSxVQUFVLENBQUMsWUFBWTtNQUNyQixJQUFJO1FBQ0Z6QixNQUFNLENBQUMwQixHQUFHLEVBQUU7TUFDZCxDQUFDLENBQUMsT0FBT0MsS0FBSyxFQUFFO1FBQ2RMLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDLHNCQUFzQixDQUFDO1FBQ25DRCxPQUFPLENBQUNLLEtBQUssQ0FBQ0EsS0FBSyxDQUFDO01BQ3RCO0lBQ0YsQ0FBQyxFQUFFLElBQUksQ0FBQztFQUNWO0FBQ0YsQ0FBQyxDQUFDO0FBRUZDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHNUIsR0FBRyxDQUFDLENBQUMifQ==","map":{"version":3,"names":["require","config","express","bodyParser","expect","cors","fccTestingRoutes","apiRoutes","runner","app","use","static","process","cwd","origin","json","urlencoded","extended","route","get","req","res","sendFile","next","status","type","send","PORT","env","listen","console","log","NODE_ENV","setTimeout","run","error","module","exports"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/","sources":["server.js"],"sourcesContent":["require('dotenv').config();\nconst express     = require('express');\nconst bodyParser  = require('body-parser');\nconst expect      = require('chai').expect;\nconst cors        = require('cors');\n\nconst fccTestingRoutes  = require('./routes/fcctesting.js');\nconst apiRoutes         = require('./routes/api.js');\nconst runner            = require('./test-runner');\n\nconst app = express();\n\napp.use('/public', express.static(process.cwd() + '/public'));\napp.use(cors({origin: '*'})); //For FCC testing purposes only\n\napp.use(bodyParser.json());\napp.use(bodyParser.urlencoded({ extended: true }));\n\n//Index page (static HTML)\napp.route('/')\n  .get(function (req, res) {\n    res.sendFile(process.cwd() + '/views/index.html');\n  });\n\n//For FCC testing purposes\nfccTestingRoutes(app);\n\n// User routes\napiRoutes(app);\n    \n//404 Not Found Middleware\napp.use(function(req, res, next) {\n  res.status(404)\n    .type('text')\n    .send('Not Found');\n});\n\n//Start our server and tests!\nconst PORT = process.env.PORT || 3000\napp.listen(PORT, function () {\n  console.log(\"Listening on port \" + PORT);\n  // process.env.NODE_ENV='test'\n  if (process.env.NODE_ENV==='test') {\n    console.log('Running Tests...');\n    setTimeout(function () {\n      try {\n        runner.run();\n      } catch (error) {\n        console.log('Tests are not valid:');\n        console.error(error);\n      }\n    }, 1500);\n  }\n});\n\nmodule.exports = app; // for testing\n"],"mappings":"AAAAA,OAAO,CAAC,QAAQ,CAAC,CAACC,MAAM,EAAE;AAC1B,MAAMC,OAAO,GAAOF,OAAO,CAAC,SAAS,CAAC;AACtC,MAAMG,UAAU,GAAIH,OAAO,CAAC,aAAa,CAAC;AAC1C,MAAMI,MAAM,GAAQJ,OAAO,CAAC,MAAM,CAAC,CAACI,MAAM;AAC1C,MAAMC,IAAI,GAAUL,OAAO,CAAC,MAAM,CAAC;AAEnC,MAAMM,gBAAgB,GAAIN,OAAO,CAAC,wBAAwB,CAAC;AAC3D,MAAMO,SAAS,GAAWP,OAAO,CAAC,iBAAiB,CAAC;AACpD,MAAMQ,MAAM,GAAcR,OAAO,CAAC,eAAe,CAAC;AAElD,MAAMS,GAAG,GAAGP,OAAO,EAAE;AAErBO,GAAG,CAACC,GAAG,CAAC,SAAS,EAAER,OAAO,CAACS,MAAM,CAACC,OAAO,CAACC,GAAG,EAAE,GAAG,SAAS,CAAC,CAAC;AAC7DJ,GAAG,CAACC,GAAG,CAACL,IAAI,CAAC;EAACS,MAAM,EAAE;AAAG,CAAC,CAAC,CAAC,CAAC,CAAC;;AAE9BL,GAAG,CAACC,GAAG,CAACP,UAAU,CAACY,IAAI,EAAE,CAAC;AAC1BN,GAAG,CAACC,GAAG,CAACP,UAAU,CAACa,UAAU,CAAC;EAAEC,QAAQ,EAAE;AAAK,CAAC,CAAC,CAAC;;AAElD;AACAR,GAAG,CAACS,KAAK,CAAC,GAAG,CAAC,CACXC,GAAG,CAAC,UAAUC,GAAG,EAAEC,GAAG,EAAE;EACvBA,GAAG,CAACC,QAAQ,CAACV,OAAO,CAACC,GAAG,EAAE,GAAG,mBAAmB,CAAC;AACnD,CAAC,CAAC;;AAEJ;AACAP,gBAAgB,CAACG,GAAG,CAAC;;AAErB;AACAF,SAAS,CAACE,GAAG,CAAC;;AAEd;AACAA,GAAG,CAACC,GAAG,CAAC,UAASU,GAAG,EAAEC,GAAG,EAAEE,IAAI,EAAE;EAC/BF,GAAG,CAACG,MAAM,CAAC,GAAG,CAAC,CACZC,IAAI,CAAC,MAAM,CAAC,CACZC,IAAI,CAAC,WAAW,CAAC;AACtB,CAAC,CAAC;;AAEF;AACA,MAAMC,IAAI,GAAGf,OAAO,CAACgB,GAAG,CAACD,IAAI,IAAI,IAAI;AACrClB,GAAG,CAACoB,MAAM,CAACF,IAAI,EAAE,YAAY;EAC3BG,OAAO,CAACC,GAAG,CAAC,oBAAoB,GAAGJ,IAAI,CAAC;EACxC;EACA,IAAIf,OAAO,CAACgB,GAAG,CAACI,QAAQ,KAAG,MAAM,EAAE;IACjCF,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;IAC/BE,UAAU,CAAC,YAAY;MACrB,IAAI;QACFzB,MAAM,CAAC0B,GAAG,EAAE;MACd,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdL,OAAO,CAACC,GAAG,CAAC,sBAAsB,CAAC;QACnCD,OAAO,CAACK,KAAK,CAACA,KAAK,CAAC;MACtB;IACF,CAAC,EAAE,IAAI,CAAC;EACV;AACF,CAAC,CAAC;AAEFC,MAAM,CAACC,OAAO,GAAG5B,GAAG,CAAC,CAAC"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/routes/fcctesting.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\nmodule.exports = function (app) {\n  app.route('/_api/server.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/server.js', function (err, data) {\n      if (err) return next(err);\n      res.send(data.toString());\n    });\n  });\n  app.route('/_api/routes/api.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/routes/api.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.route('/_api/controllers/convertHandler.js').get(function (req, res, next) {\n    console.log('requested');\n    fs.readFile(__dirname + '/controllers/convertHandler.js', function (err, data) {\n      if (err) return next(err);\n      res.type('txt').send(data.toString());\n    });\n  });\n  app.get('/_api/get-tests', cors(), function (req, res, next) {\n    console.log('requested');\n    if (process.env.NODE_ENV === 'test') return next();\n    // res.json({ status: 'unavailable' });\n  }, function (req, res, next) {\n    if (!runner.report) return next();\n    res.json(testFilter(runner.report, req.query.type, req.query.n));\n  }, function (req, res) {\n    runner.on('done', function (report) {\n      process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n    });\n  });\n  app.get('/_api/app-info', function (req, res) {\n    let hs = Object.keys(res._headers).filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => {\n      hObj[h] = res._headers[h];\n    });\n    delete res._headers['strict-transport-security'];\n    res.json({\n      headers: hObj\n    });\n  });\n};\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","map":{"version":3,"names":["cors","require","fs","runner","module","exports","app","route","get","req","res","next","console","log","readFile","__dirname","err","data","send","toString","type","process","env","NODE_ENV","report","json","testFilter","query","n","on","nextTick","hs","Object","keys","_headers","filter","h","match","hObj","forEach","headers","tests","out","t","context","title","undefined"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/routes/","sources":["fcctesting.js"],"sourcesContent":["/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\n'use strict';\n\nconst cors = require('cors');\nconst fs = require('fs');\nconst runner = require('../test-runner');\n\nmodule.exports = function(app) {\n\n  app.route('/_api/server.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/server.js', function(err, data) {\n        if (err) return next(err);\n        res.send(data.toString());\n      });\n    });\n  app.route('/_api/routes/api.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/routes/api.js', function(err, data) {\n        if (err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n  app.route('/_api/controllers/convertHandler.js')\n    .get(function(req, res, next) {\n      console.log('requested');\n      fs.readFile(__dirname + '/controllers/convertHandler.js', function(err, data) {\n        if (err) return next(err);\n        res.type('txt').send(data.toString());\n      });\n    });\n\n  app.get('/_api/get-tests', cors(), function(req, res, next) {\n    console.log('requested');\n    if (process.env.NODE_ENV === 'test') return next();\n    // res.json({ status: 'unavailable' });\n  },\n    function(req, res, next) {\n      if (!runner.report) return next();\n      res.json(testFilter(runner.report, req.query.type, req.query.n));\n    },\n    function(req, res) {\n      runner.on('done', function(report) {\n        process.nextTick(() => res.json(testFilter(runner.report, req.query.type, req.query.n)));\n      });\n    });\n  app.get('/_api/app-info', function(req, res) {\n    let hs = Object.keys(res._headers)\n      .filter(h => !h.match(/^access-control-\\w+/));\n    let hObj = {};\n    hs.forEach(h => { hObj[h] = res._headers[h] });\n    delete res._headers['strict-transport-security'];\n    res.json({ headers: hObj });\n  });\n\n};\n\nfunction testFilter(tests, type, n) {\n  let out;\n  switch (type) {\n    case 'unit':\n      out = tests.filter(t => t.context.match('Unit Tests'));\n      break;\n    case 'functional':\n      out = tests.filter(t => t.context.match('Functional Tests') && !t.title.match('#example'));\n      break;\n    default:\n      out = tests;\n  }\n  if (n !== undefined) {\n    return out[n] || out;\n  }\n  return out;\n}"],"mappings":"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"}},"mtime":1682147003053},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/test-runner.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\nconst Mocha = require('mocha'),\n  fs = require('fs'),\n  path = require('path');\nrequire(\"@babel/register\");\nconst mocha = new Mocha({\n  timeout: 5000\n});\nconst testDir = './tests';\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function (file) {\n  // Only keep the .js files\n  return file.substr(-3) === '.js';\n}).forEach(function (file) {\n  mocha.addFile(path.join(testDir, file));\n});\nlet emitter = new EventEmitter();\nemitter.run = function () {\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n    let runner = mocha.ui('tdd').run().on('test end', function (test) {\n      // remove comments\n      let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n      // collapse spaces\n      body = body.replace(/\\s+/g, ' ');\n      let obj = {\n        title: test.title,\n        context: context.slice(0, -separator.length),\n        state: test.state,\n        // body: body,\n        assertions: analyser(body)\n      };\n      tests.push(obj);\n    }).on('end', function () {\n      emitter.report = tests;\n      emitter.emit('done', tests);\n    }).on('suite', function (s) {\n      context += s.title + separator;\n    }).on('suite end', function (s) {\n      context = context.slice(0, -(s.title.length + separator.length));\n    });\n  } catch (e) {\n    throw e;\n  }\n};\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJhbmFseXNlciIsInJlcXVpcmUiLCJFdmVudEVtaXR0ZXIiLCJNb2NoYSIsImZzIiwicGF0aCIsIm1vY2hhIiwidGltZW91dCIsInRlc3REaXIiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJzdWJzdHIiLCJmb3JFYWNoIiwiYWRkRmlsZSIsImpvaW4iLCJlbWl0dGVyIiwicnVuIiwidGVzdHMiLCJjb250ZXh0Iiwic2VwYXJhdG9yIiwicnVubmVyIiwidWkiLCJvbiIsInRlc3QiLCJib2R5IiwicmVwbGFjZSIsIm9iaiIsInRpdGxlIiwic2xpY2UiLCJsZW5ndGgiLCJzdGF0ZSIsImFzc2VydGlvbnMiLCJwdXNoIiwicmVwb3J0IiwiZW1pdCIsInMiLCJlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiL2hvbWUvdHNlbGdlci03MDUwL0Rlc2t0b3AvZmNjLyIsInNvdXJjZXMiOlsidGVzdC1ydW5uZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiogICAgICAgRE8gTk9UIEVESVQgVEhJUyBGSUxFXG4qICAgICAgIEZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyFcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiovXG5cbmNvbnN0IGFuYWx5c2VyID0gcmVxdWlyZSgnLi9hc3NlcnRpb24tYW5hbHlzZXInKTtcbmNvbnN0IEV2ZW50RW1pdHRlciA9IHJlcXVpcmUoJ2V2ZW50cycpLkV2ZW50RW1pdHRlcjtcblxuY29uc3QgTW9jaGEgPSByZXF1aXJlKCdtb2NoYScpLFxuICAgIGZzID0gcmVxdWlyZSgnZnMnKSxcbiAgICBwYXRoID0gcmVxdWlyZSgncGF0aCcpO1xuICAgIHJlcXVpcmUoXCJAYmFiZWwvcmVnaXN0ZXJcIik7XG5cbmNvbnN0IG1vY2hhID0gbmV3IE1vY2hhKHsgdGltZW91dDogNTAwMCB9KTtcbmNvbnN0IHRlc3REaXIgPSAnLi90ZXN0cydcblxuXG4vLyBBZGQgZWFjaCAuanMgZmlsZSB0byB0aGUgbW9jaGEgaW5zdGFuY2VcbmZzLnJlYWRkaXJTeW5jKHRlc3REaXIpLmZpbHRlcihmdW5jdGlvbihmaWxlKXtcbiAgICAvLyBPbmx5IGtlZXAgdGhlIC5qcyBmaWxlc1xuICAgIHJldHVybiBmaWxlLnN1YnN0cigtMykgPT09ICcuanMnO1xuXG59KS5mb3JFYWNoKGZ1bmN0aW9uKGZpbGUpe1xuICAgIG1vY2hhLmFkZEZpbGUoXG4gICAgICAgIHBhdGguam9pbih0ZXN0RGlyLCBmaWxlKVxuICAgICk7XG59KTtcblxubGV0IGVtaXR0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XG5lbWl0dGVyLnJ1biA9IGZ1bmN0aW9uKCkge1xuXG4gIGxldCB0ZXN0cyA9IFtdO1xuICBsZXQgY29udGV4dCA9IFwiXCI7XG4gIGxldCBzZXBhcmF0b3IgPSAnIC0+ICc7XG4gIC8vIFJ1biB0aGUgdGVzdHMuXG4gIHRyeSB7XG4gIGxldCBydW5uZXIgPSBtb2NoYS51aSgndGRkJykucnVuKClcbiAgICAub24oJ3Rlc3QgZW5kJywgZnVuY3Rpb24odGVzdCkge1xuICAgICAgICAvLyByZW1vdmUgY29tbWVudHNcbiAgICAgICAgbGV0IGJvZHkgPSB0ZXN0LmJvZHkucmVwbGFjZSgvXFwvXFwvLipcXG58XFwvXFwqLipcXCpcXC8vZywgJycpO1xuICAgICAgICAvLyBjb2xsYXBzZSBzcGFjZXNcbiAgICAgICAgYm9keSA9IGJvZHkucmVwbGFjZSgvXFxzKy9nLCcgJyk7XG4gICAgICAgIGxldCBvYmogPSB7XG4gICAgICAgICAgdGl0bGU6IHRlc3QudGl0bGUsXG4gICAgICAgICAgY29udGV4dDogY29udGV4dC5zbGljZSgwLCAtc2VwYXJhdG9yLmxlbmd0aCksXG4gICAgICAgICAgc3RhdGU6IHRlc3Quc3RhdGUsXG4gICAgICAgICAgLy8gYm9keTogYm9keSxcbiAgICAgICAgICBhc3NlcnRpb25zOiBhbmFseXNlcihib2R5KVxuICAgICAgICB9O1xuICAgICAgICB0ZXN0cy5wdXNoKG9iaik7XG4gICAgfSlcbiAgICAub24oJ2VuZCcsIGZ1bmN0aW9uKCkge1xuICAgICAgICBlbWl0dGVyLnJlcG9ydCA9IHRlc3RzO1xuICAgICAgICBlbWl0dGVyLmVtaXQoJ2RvbmUnLCB0ZXN0cylcbiAgICB9KVxuICAgIC5vbignc3VpdGUnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ICs9IChzLnRpdGxlICsgc2VwYXJhdG9yKTtcblxuICAgIH0pXG4gICAgLm9uKCdzdWl0ZSBlbmQnLCBmdW5jdGlvbihzKSB7XG4gICAgICBjb250ZXh0ID0gY29udGV4dC5zbGljZSgwLCAtKHMudGl0bGUubGVuZ3RoICsgc2VwYXJhdG9yLmxlbmd0aCkpXG4gICAgfSlcbiAgfSBjYXRjaChlKSB7XG4gICAgdGhyb3coZSk7XG4gIH1cbn07XG5cbm1vZHVsZS5leHBvcnRzID0gZW1pdHRlcjtcblxuLypcbiAqIE1vY2hhLnJ1bm5lciBFdmVudHM6XG4gKiBjYW4gYmUgdXNlZCB0byBidWlsZCBhIGJldHRlciBjdXN0b20gcmVwb3J0XG4gKlxuICogICAtIGBzdGFydGAgIGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYGVuZGAgIGV4ZWN1dGlvbiBjb21wbGV0ZVxuICogICAtIGBzdWl0ZWAgIChzdWl0ZSkgdGVzdCBzdWl0ZSBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBzdWl0ZSBlbmRgICAoc3VpdGUpIGFsbCB0ZXN0cyAoYW5kIHN1Yi1zdWl0ZXMpIGhhdmUgZmluaXNoZWRcbiAqICAgLSBgdGVzdGAgICh0ZXN0KSB0ZXN0IGV4ZWN1dGlvbiBzdGFydGVkXG4gKiAgIC0gYHRlc3QgZW5kYCAgKHRlc3QpIHRlc3QgY29tcGxldGVkXG4gKiAgIC0gYGhvb2tgICAoaG9vaykgaG9vayBleGVjdXRpb24gc3RhcnRlZFxuICogICAtIGBob29rIGVuZGAgIChob29rKSBob29rIGNvbXBsZXRlXG4gKiAgIC0gYHBhc3NgICAodGVzdCkgdGVzdCBwYXNzZWRcbiAqICAgLSBgZmFpbGAgICh0ZXN0LCBlcnIpIHRlc3QgZmFpbGVkXG4gKiAgIC0gYHBlbmRpbmdgICAodGVzdCkgdGVzdCBwZW5kaW5nXG4gKi8iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsTUFBTUEsUUFBUSxHQUFHQyxPQUFPLENBQUMsc0JBQXNCLENBQUM7QUFDaEQsTUFBTUMsWUFBWSxHQUFHRCxPQUFPLENBQUMsUUFBUSxDQUFDLENBQUNDLFlBQVk7QUFFbkQsTUFBTUMsS0FBSyxHQUFHRixPQUFPLENBQUMsT0FBTyxDQUFDO0VBQzFCRyxFQUFFLEdBQUdILE9BQU8sQ0FBQyxJQUFJLENBQUM7RUFDbEJJLElBQUksR0FBR0osT0FBTyxDQUFDLE1BQU0sQ0FBQztBQUN0QkEsT0FBTyxDQUFDLGlCQUFpQixDQUFDO0FBRTlCLE1BQU1LLEtBQUssR0FBRyxJQUFJSCxLQUFLLENBQUM7RUFBRUksT0FBTyxFQUFFO0FBQUssQ0FBQyxDQUFDO0FBQzFDLE1BQU1DLE9BQU8sR0FBRyxTQUFTOztBQUd6QjtBQUNBSixFQUFFLENBQUNLLFdBQVcsQ0FBQ0QsT0FBTyxDQUFDLENBQUNFLE1BQU0sQ0FBQyxVQUFTQyxJQUFJLEVBQUM7RUFDekM7RUFDQSxPQUFPQSxJQUFJLENBQUNDLE1BQU0sQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLEtBQUs7QUFFcEMsQ0FBQyxDQUFDLENBQUNDLE9BQU8sQ0FBQyxVQUFTRixJQUFJLEVBQUM7RUFDckJMLEtBQUssQ0FBQ1EsT0FBTyxDQUNUVCxJQUFJLENBQUNVLElBQUksQ0FBQ1AsT0FBTyxFQUFFRyxJQUFJLENBQUMsQ0FDM0I7QUFDTCxDQUFDLENBQUM7QUFFRixJQUFJSyxPQUFPLEdBQUcsSUFBSWQsWUFBWSxFQUFFO0FBQ2hDYyxPQUFPLENBQUNDLEdBQUcsR0FBRyxZQUFXO0VBRXZCLElBQUlDLEtBQUssR0FBRyxFQUFFO0VBQ2QsSUFBSUMsT0FBTyxHQUFHLEVBQUU7RUFDaEIsSUFBSUMsU0FBUyxHQUFHLE1BQU07RUFDdEI7RUFDQSxJQUFJO0lBQ0osSUFBSUMsTUFBTSxHQUFHZixLQUFLLENBQUNnQixFQUFFLENBQUMsS0FBSyxDQUFDLENBQUNMLEdBQUcsRUFBRSxDQUMvQk0sRUFBRSxDQUFDLFVBQVUsRUFBRSxVQUFTQyxJQUFJLEVBQUU7TUFDM0I7TUFDQSxJQUFJQyxJQUFJLEdBQUdELElBQUksQ0FBQ0MsSUFBSSxDQUFDQyxPQUFPLENBQUMsc0JBQXNCLEVBQUUsRUFBRSxDQUFDO01BQ3hEO01BQ0FELElBQUksR0FBR0EsSUFBSSxDQUFDQyxPQUFPLENBQUMsTUFBTSxFQUFDLEdBQUcsQ0FBQztNQUMvQixJQUFJQyxHQUFHLEdBQUc7UUFDUkMsS0FBSyxFQUFFSixJQUFJLENBQUNJLEtBQUs7UUFDakJULE9BQU8sRUFBRUEsT0FBTyxDQUFDVSxLQUFLLENBQUMsQ0FBQyxFQUFFLENBQUNULFNBQVMsQ0FBQ1UsTUFBTSxDQUFDO1FBQzVDQyxLQUFLLEVBQUVQLElBQUksQ0FBQ08sS0FBSztRQUNqQjtRQUNBQyxVQUFVLEVBQUVoQyxRQUFRLENBQUN5QixJQUFJO01BQzNCLENBQUM7TUFDRFAsS0FBSyxDQUFDZSxJQUFJLENBQUNOLEdBQUcsQ0FBQztJQUNuQixDQUFDLENBQUMsQ0FDREosRUFBRSxDQUFDLEtBQUssRUFBRSxZQUFXO01BQ2xCUCxPQUFPLENBQUNrQixNQUFNLEdBQUdoQixLQUFLO01BQ3RCRixPQUFPLENBQUNtQixJQUFJLENBQUMsTUFBTSxFQUFFakIsS0FBSyxDQUFDO0lBQy9CLENBQUMsQ0FBQyxDQUNESyxFQUFFLENBQUMsT0FBTyxFQUFFLFVBQVNhLENBQUMsRUFBRTtNQUN2QmpCLE9BQU8sSUFBS2lCLENBQUMsQ0FBQ1IsS0FBSyxHQUFHUixTQUFVO0lBRWxDLENBQUMsQ0FBQyxDQUNERyxFQUFFLENBQUMsV0FBVyxFQUFFLFVBQVNhLENBQUMsRUFBRTtNQUMzQmpCLE9BQU8sR0FBR0EsT0FBTyxDQUFDVSxLQUFLLENBQUMsQ0FBQyxFQUFFLEVBQUVPLENBQUMsQ0FBQ1IsS0FBSyxDQUFDRSxNQUFNLEdBQUdWLFNBQVMsQ0FBQ1UsTUFBTSxDQUFDLENBQUM7SUFDbEUsQ0FBQyxDQUFDO0VBQ0osQ0FBQyxDQUFDLE9BQU1PLENBQUMsRUFBRTtJQUNULE1BQU1BLENBQUM7RUFDVDtBQUNGLENBQUM7QUFFREMsTUFBTSxDQUFDQyxPQUFPLEdBQUd2QixPQUFPOztBQUV4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSJ9","map":{"version":3,"names":["analyser","require","EventEmitter","Mocha","fs","path","mocha","timeout","testDir","readdirSync","filter","file","substr","forEach","addFile","join","emitter","run","tests","context","separator","runner","ui","on","test","body","replace","obj","title","slice","length","state","assertions","push","report","emit","s","e","module","exports"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/","sources":["test-runner.js"],"sourcesContent":["/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nconst analyser = require('./assertion-analyser');\nconst EventEmitter = require('events').EventEmitter;\n\nconst Mocha = require('mocha'),\n    fs = require('fs'),\n    path = require('path');\n    require(\"@babel/register\");\n\nconst mocha = new Mocha({ timeout: 5000 });\nconst testDir = './tests'\n\n\n// Add each .js file to the mocha instance\nfs.readdirSync(testDir).filter(function(file){\n    // Only keep the .js files\n    return file.substr(-3) === '.js';\n\n}).forEach(function(file){\n    mocha.addFile(\n        path.join(testDir, file)\n    );\n});\n\nlet emitter = new EventEmitter();\nemitter.run = function() {\n\n  let tests = [];\n  let context = \"\";\n  let separator = ' -> ';\n  // Run the tests.\n  try {\n  let runner = mocha.ui('tdd').run()\n    .on('test end', function(test) {\n        // remove comments\n        let body = test.body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n        // collapse spaces\n        body = body.replace(/\\s+/g,' ');\n        let obj = {\n          title: test.title,\n          context: context.slice(0, -separator.length),\n          state: test.state,\n          // body: body,\n          assertions: analyser(body)\n        };\n        tests.push(obj);\n    })\n    .on('end', function() {\n        emitter.report = tests;\n        emitter.emit('done', tests)\n    })\n    .on('suite', function(s) {\n      context += (s.title + separator);\n\n    })\n    .on('suite end', function(s) {\n      context = context.slice(0, -(s.title.length + separator.length))\n    })\n  } catch(e) {\n    throw(e);\n  }\n};\n\nmodule.exports = emitter;\n\n/*\n * Mocha.runner Events:\n * can be used to build a better custom report\n *\n *   - `start`  execution started\n *   - `end`  execution complete\n *   - `suite`  (suite) test suite execution started\n *   - `suite end`  (suite) all tests (and sub-suites) have finished\n *   - `test`  (test) test execution started\n *   - `test end`  (test) test completed\n *   - `hook`  (hook) hook execution started\n *   - `hook end`  (hook) hook complete\n *   - `pass`  (test) test passed\n *   - `fail`  (test, err) test failed\n *   - `pending`  (test) test pending\n */"],"mappings":"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"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/assertion-analyser.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for (i = init || 0; i < str.length; i++) {\n    type = openSym.indexOf(str[i]);\n    if (type !== -1) break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for (k = i + 1; k < str.length; k++) {\n    if (open === '\"' || open === \"'\") {\n      if (str[k] === close) count--;\n      if (str[k] === '\\\\') k++;\n    } else {\n      if (str[k] === open) count++;\n      if (str[k] === close) count--;\n    }\n    if (count === 0) break;\n  }\n  if (count !== 0) return null;\n  let obj = str.slice(i, k + 1);\n  return {\n    start: i,\n    end: k,\n    obj: obj\n  };\n}\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while (obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end + 1);\n  }\n  return {\n    str: str,\n    dictionary: data\n  };\n}\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function (a) {\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  });\n  return args;\n}\nfunction assertionAnalyser(body) {\n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n\n  if (!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/);\n  if (cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function (a, i) {\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if (methods.some(function (m) {\n    return !m;\n  })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function (b) {\n    return s.dictionary[b].slice(1, -1).trim();\n  });\n  assertions = methods.map(function (m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    };\n  });\n\n  return assertions;\n}\nmodule.exports = assertionAnalyser;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJvYmpQYXJzZXIiLCJzdHIiLCJpbml0Iiwib3BlblN5bSIsImNsb3NlU3ltIiwidHlwZSIsImkiLCJsZW5ndGgiLCJpbmRleE9mIiwib3BlbiIsImNsb3NlIiwiY291bnQiLCJrIiwib2JqIiwic2xpY2UiLCJzdGFydCIsImVuZCIsInJlcGxhY2VyIiwiY250IiwiZGF0YSIsInN1YnN0cmluZyIsImRpY3Rpb25hcnkiLCJzcGxpdHRlciIsInN0ck9iaiIsImFyZ3MiLCJzcGxpdCIsIm1hcCIsImEiLCJtIiwibWF0Y2giLCJyZXBsYWNlIiwidHJpbSIsImFzc2VydGlvbkFuYWx5c2VyIiwiYm9keSIsImNsZWFuZWRCb2R5IiwiQXJyYXkiLCJpc0FycmF5IiwicyIsInNwbGl0dGVkQXNzZXJ0aW9ucyIsImFzc2VydGlvbnMiLCJhc3NlcnRpb25Cb2RpZXMiLCJtZXRob2RzIiwicHVzaCIsInBhcnNlSW50IiwicHJlIiwic29tZSIsImJvZGllcyIsImIiLCJtZXRob2QiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiIvaG9tZS90c2VsZ2VyLTcwNTAvRGVza3RvcC9mY2MvIiwic291cmNlcyI6WyJhc3NlcnRpb24tYW5hbHlzZXIuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLypcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiogICAgICAgRE8gTk9UIEVESVQgVEhJUyBGSUxFXG4qICAgICAgIEZvciBGQ0MgdGVzdGluZyBwdXJwb3NlcyFcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbipcbiovXG5cbmZ1bmN0aW9uIG9ialBhcnNlcihzdHIsIGluaXQpIHtcbiAgLy8gZmluZHMgb2JqZWN0cywgYXJyYXlzLCBzdHJpbmdzLCBhbmQgZnVuY3Rpb24gYXJndW1lbnRzXG4gIC8vIGJldHdlZW4gcGFyZW5zLCBiZWNhdXNlIHRoZXkgbWF5IGNvbnRhaW4gJywnXG4gIGxldCBvcGVuU3ltID0gWydbJywgJ3snLCAnXCInLCBcIidcIiwgJygnXTtcbiAgbGV0IGNsb3NlU3ltID0gWyddJywgJ30nLCAnXCInLCBcIidcIiwgJyknXTtcbiAgbGV0IHR5cGU7XG4gIGxldCBpO1xuICBmb3IoaSA9IChpbml0IHx8IDApOyBpIDwgc3RyLmxlbmd0aDsgaSsrICkge1xuICAgIHR5cGUgPSBvcGVuU3ltLmluZGV4T2Yoc3RyW2ldKTtcbiAgICBpZiggdHlwZSAhPT0gLTEpICBicmVhaztcbiAgfVxuICBpZiAodHlwZSA9PT0gLTEpIHJldHVybiBudWxsO1xuICBsZXQgb3BlbiA9IG9wZW5TeW1bdHlwZV07XG4gIGxldCBjbG9zZSA9IGNsb3NlU3ltW3R5cGVdO1xuICBsZXQgY291bnQgPSAxO1xuICBsZXQgaztcbiAgZm9yKGsgPSBpKzE7IGsgPCBzdHIubGVuZ3RoOyBrKyspIHtcbiAgICBpZihvcGVuID09PSAnXCInIHx8IG9wZW4gPT09IFwiJ1wiKSB7XG4gICAgICBpZihzdHJba10gPT09IGNsb3NlKSBjb3VudC0tO1xuICAgICAgaWYoc3RyW2tdID09PSAnXFxcXCcpIGsrKztcbiAgICB9IGVsc2Uge1xuICAgICAgaWYoc3RyW2tdID09PSBvcGVuKSBjb3VudCsrO1xuICAgICAgaWYoc3RyW2tdID09PSBjbG9zZSkgY291bnQtLTtcbiAgICB9XG4gICAgaWYoY291bnQgPT09IDApIGJyZWFrO1xuICB9XG4gIGlmKGNvdW50ICE9PSAwKSByZXR1cm4gbnVsbDtcbiAgbGV0IG9iaiA9IHN0ci5zbGljZShpLCBrKzEpO1xuICByZXR1cm4ge1xuICAgIHN0YXJ0IDogaSxcbiAgICBlbmQ6IGssXG4gICAgb2JqOiBvYmpcbiAgfTtcbn1cblxuZnVuY3Rpb24gcmVwbGFjZXIoc3RyKSB7XG4gIC8vIHJlcGxhY2Ugb2JqZWN0cyB3aXRoIGEgc3ltYm9sICggX18jbilcbiAgbGV0IG9iajtcbiAgbGV0IGNudCA9IDA7XG4gIGxldCBkYXRhID0gW107XG4gIHdoaWxlKG9iaiA9IG9ialBhcnNlcihzdHIpKSB7XG4gICAgZGF0YVtjbnRdID0gb2JqLm9iajtcbiAgICBzdHIgPSBzdHIuc3Vic3RyaW5nKDAsIG9iai5zdGFydCkgKyAnX18jJyArIGNudCsrICsgc3RyLnN1YnN0cmluZyhvYmouZW5kKzEpXG4gIH1cbiAgcmV0dXJuIHtcbiAgICBzdHIgOiBzdHIsXG4gICAgZGljdGlvbmFyeSA6IGRhdGFcbiAgfVxufVxuXG5mdW5jdGlvbiBzcGxpdHRlcihzdHIpIHtcbiAgLy8gc3BsaXQgb24gY29tbWFzLCB0aGVuIHJlc3RvcmUgdGhlIG9iamVjdHNcbiAgbGV0IHN0ck9iaiA9IHJlcGxhY2VyKHN0cik7XG4gIGxldCBhcmdzID0gc3RyT2JqLnN0ci5zcGxpdCgnLCcpO1xuICBhcmdzID0gYXJncy5tYXAoZnVuY3Rpb24oYSl7XG4gICAgbGV0IG0gPSBhLm1hdGNoKC9fXyMoXFxkKykvKTtcbiAgICB3aGlsZSAobSkge1xuICAgICAgYSA9IGEucmVwbGFjZSgvX18jKFxcZCspLywgc3RyT2JqLmRpY3Rpb25hcnlbbVsxXV0pO1xuICAgICAgbSA9IGEubWF0Y2goL19fIyhcXGQrKS8pO1xuICAgIH1cbiAgICByZXR1cm4gYS50cmltKCk7XG4gIH0pXG4gIHJldHVybiBhcmdzO1xufVxuXG5mdW5jdGlvbiBhc3NlcnRpb25BbmFseXNlcihib2R5KSB7XG4gIFxuICAvLyBhbHJlYWR5IGZpbHRlcmVkIGluIHRoZSB0ZXN0IHJ1bm5lclxuICAvLyAvLyByZW1vdmUgY29tbWVudHNcbiAgLy8gYm9keSA9IGJvZHkucmVwbGFjZSgvXFwvXFwvLipcXG58XFwvXFwqLipcXCpcXC8vZywgJycpO1xuICAvLyAvLyBnZXQgdGVzdCBmdW5jdGlvbiBib2R5XG4gIC8vIGJvZHkgPSBib2R5Lm1hdGNoKC9cXHtcXHMqKFtcXHNcXFNdKilcXH1cXHMqJC8pWzFdO1xuICBcbiAgaWYoIWJvZHkpIHJldHVybiBcImludmFsaWQgYXNzZXJ0aW9uXCI7XG4gIC8vIHJlcGxhY2UgYXNzZXJ0aW9ucyBib2RpZXMsIHNvIHRoYXQgdGhleSBjYW5ub3RcbiAgLy8gY29udGFpbiB0aGUgd29yZCAnYXNzZXJ0aW9uJ1xuXG4gIGxldCBjbGVhbmVkQm9keSA9IGJvZHkubWF0Y2goLyg/OmJyb3dzZXJcXHMqXFwuXFxzKik/YXNzZXJ0XFxzKlxcLlxccypcXHcqXFwoW1xcc1xcU10qXFwpLylcbiAgaWYoY2xlYW5lZEJvZHkgJiYgQXJyYXkuaXNBcnJheShjbGVhbmVkQm9keSkpIHtcbiAgICBib2R5ID0gY2xlYW5lZEJvZHlbMF07XG4gIH0gZWxzZSB7XG4gICAgLy8gTm8gYXNzZXJ0aW9ucyBwcmVzZW50XG4gICAgcmV0dXJuIFtdO1xuICB9XG4gIGxldCBzID0gcmVwbGFjZXIoYm9keSk7XG4gIC8vIHNwbGl0IG9uICdhc3NlcnRpb24nXG4gIGxldCBzcGxpdHRlZEFzc2VydGlvbnMgPSBzLnN0ci5zcGxpdCgnYXNzZXJ0Jyk7XG4gIGxldCBhc3NlcnRpb25zID0gc3BsaXR0ZWRBc3NlcnRpb25zLnNsaWNlKDEpO1xuICAvLyBtYXRjaCB0aGUgTUVUSE9EU1xuXG4gIGxldCBhc3NlcnRpb25Cb2RpZXMgPSBbXTtcbiAgbGV0IG1ldGhvZHMgPSBhc3NlcnRpb25zLm1hcChmdW5jdGlvbihhLCBpKXtcbiAgICBsZXQgbSA9IGEubWF0Y2goL15cXHMqXFwuXFxzKihcXHcrKV9fIyhcXGQrKS8pO1xuICAgIGFzc2VydGlvbkJvZGllcy5wdXNoKHBhcnNlSW50KG1bMl0pKTtcbiAgICBsZXQgcHJlID0gc3BsaXR0ZWRBc3NlcnRpb25zW2ldLm1hdGNoKC9icm93c2VyXFxzKlxcLlxccyovKSA/ICdicm93c2VyLicgOiAnJztcbiAgICByZXR1cm4gcHJlICsgbVsxXTtcbiAgfSk7XG4gIGlmKG1ldGhvZHMuc29tZShmdW5jdGlvbihtKXsgcmV0dXJuICFtIH0pKSByZXR1cm4gXCJpbnZhbGlkIGFzc2VydGlvblwiO1xuICAvLyByZW1vdmUgcGFyZW5zIGZyb20gdGhlIGFzc2VydGlvbnMgYm9kaWVzXG4gIGxldCBib2RpZXMgPSBhc3NlcnRpb25Cb2RpZXMubWFwKGZ1bmN0aW9uKGIpe1xuICAgIHJldHVybiBzLmRpY3Rpb25hcnlbYl0uc2xpY2UoMSwtMSkudHJpbSgpO1xuICB9KTtcbiAgYXNzZXJ0aW9ucyA9IG1ldGhvZHMubWFwKGZ1bmN0aW9uKG0sIGkpIHtcbiAgICByZXR1cm4ge1xuICAgICAgbWV0aG9kOiBtLFxuICAgICAgYXJnczogc3BsaXR0ZXIoYm9kaWVzW2ldKSAvL3JlcGxhY2Ugb2JqZWN0cywgc3BsaXQgb24gJywnICx0aGVuIHJlc3RvcmUgb2JqZWN0c1xuICAgIH1cbiAgfSlcbiAgcmV0dXJuIGFzc2VydGlvbnM7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gYXNzZXJ0aW9uQW5hbHlzZXI7XG4iXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUEsU0FBU0EsU0FBU0EsQ0FBQ0MsR0FBRyxFQUFFQyxJQUFJLEVBQUU7RUFDNUI7RUFDQTtFQUNBLElBQUlDLE9BQU8sR0FBRyxDQUFDLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUM7RUFDdkMsSUFBSUMsUUFBUSxHQUFHLENBQUMsR0FBRyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLEdBQUcsQ0FBQztFQUN4QyxJQUFJQyxJQUFJO0VBQ1IsSUFBSUMsQ0FBQztFQUNMLEtBQUlBLENBQUMsR0FBSUosSUFBSSxJQUFJLENBQUUsRUFBRUksQ0FBQyxHQUFHTCxHQUFHLENBQUNNLE1BQU0sRUFBRUQsQ0FBQyxFQUFFLEVBQUc7SUFDekNELElBQUksR0FBR0YsT0FBTyxDQUFDSyxPQUFPLENBQUNQLEdBQUcsQ0FBQ0ssQ0FBQyxDQUFDLENBQUM7SUFDOUIsSUFBSUQsSUFBSSxLQUFLLENBQUMsQ0FBQyxFQUFHO0VBQ3BCO0VBQ0EsSUFBSUEsSUFB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","map":{"version":3,"names":["objParser","str","init","openSym","closeSym","type","i","length","indexOf","open","close","count","k","obj","slice","start","end","replacer","cnt","data","substring","dictionary","splitter","strObj","args","split","map","a","m","match","replace","trim","assertionAnalyser","body","cleanedBody","Array","isArray","s","splittedAssertions","assertions","assertionBodies","methods","push","parseInt","pre","some","bodies","b","method","module","exports"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/","sources":["assertion-analyser.js"],"sourcesContent":["/*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*       DO NOT EDIT THIS FILE\n*       For FCC testing purposes!\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*\n*/\n\nfunction objParser(str, init) {\n  // finds objects, arrays, strings, and function arguments\n  // between parens, because they may contain ','\n  let openSym = ['[', '{', '\"', \"'\", '('];\n  let closeSym = [']', '}', '\"', \"'\", ')'];\n  let type;\n  let i;\n  for(i = (init || 0); i < str.length; i++ ) {\n    type = openSym.indexOf(str[i]);\n    if( type !== -1)  break;\n  }\n  if (type === -1) return null;\n  let open = openSym[type];\n  let close = closeSym[type];\n  let count = 1;\n  let k;\n  for(k = i+1; k < str.length; k++) {\n    if(open === '\"' || open === \"'\") {\n      if(str[k] === close) count--;\n      if(str[k] === '\\\\') k++;\n    } else {\n      if(str[k] === open) count++;\n      if(str[k] === close) count--;\n    }\n    if(count === 0) break;\n  }\n  if(count !== 0) return null;\n  let obj = str.slice(i, k+1);\n  return {\n    start : i,\n    end: k,\n    obj: obj\n  };\n}\n\nfunction replacer(str) {\n  // replace objects with a symbol ( __#n)\n  let obj;\n  let cnt = 0;\n  let data = [];\n  while(obj = objParser(str)) {\n    data[cnt] = obj.obj;\n    str = str.substring(0, obj.start) + '__#' + cnt++ + str.substring(obj.end+1)\n  }\n  return {\n    str : str,\n    dictionary : data\n  }\n}\n\nfunction splitter(str) {\n  // split on commas, then restore the objects\n  let strObj = replacer(str);\n  let args = strObj.str.split(',');\n  args = args.map(function(a){\n    let m = a.match(/__#(\\d+)/);\n    while (m) {\n      a = a.replace(/__#(\\d+)/, strObj.dictionary[m[1]]);\n      m = a.match(/__#(\\d+)/);\n    }\n    return a.trim();\n  })\n  return args;\n}\n\nfunction assertionAnalyser(body) {\n  \n  // already filtered in the test runner\n  // // remove comments\n  // body = body.replace(/\\/\\/.*\\n|\\/\\*.*\\*\\//g, '');\n  // // get test function body\n  // body = body.match(/\\{\\s*([\\s\\S]*)\\}\\s*$/)[1];\n  \n  if(!body) return \"invalid assertion\";\n  // replace assertions bodies, so that they cannot\n  // contain the word 'assertion'\n\n  let cleanedBody = body.match(/(?:browser\\s*\\.\\s*)?assert\\s*\\.\\s*\\w*\\([\\s\\S]*\\)/)\n  if(cleanedBody && Array.isArray(cleanedBody)) {\n    body = cleanedBody[0];\n  } else {\n    // No assertions present\n    return [];\n  }\n  let s = replacer(body);\n  // split on 'assertion'\n  let splittedAssertions = s.str.split('assert');\n  let assertions = splittedAssertions.slice(1);\n  // match the METHODS\n\n  let assertionBodies = [];\n  let methods = assertions.map(function(a, i){\n    let m = a.match(/^\\s*\\.\\s*(\\w+)__#(\\d+)/);\n    assertionBodies.push(parseInt(m[2]));\n    let pre = splittedAssertions[i].match(/browser\\s*\\.\\s*/) ? 'browser.' : '';\n    return pre + m[1];\n  });\n  if(methods.some(function(m){ return !m })) return \"invalid assertion\";\n  // remove parens from the assertions bodies\n  let bodies = assertionBodies.map(function(b){\n    return s.dictionary[b].slice(1,-1).trim();\n  });\n  assertions = methods.map(function(m, i) {\n    return {\n      method: m,\n      args: splitter(bodies[i]) //replace objects, split on ',' ,then restore objects\n    }\n  })\n  return assertions;\n}\n\nmodule.exports = assertionAnalyser;\n"],"mappings":"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"}},"mtime":1631298864000},"{\"assumptions\":{},\"sourceRoot\":\"/home/tselger-7050/Desktop/fcc/routes/\",\"caller\":{\"name\":\"@babel/register\"},\"cwd\":\"/home/tselger-7050/Desktop/fcc\",\"filename\":\"/home/tselger-7050/Desktop/fcc/routes/api.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"test\",\"root\":\"/home/tselger-7050/Desktop/fcc\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.21.4:test":{"value":{"code":"'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\nmodule.exports = function (app) {\n  // Get the sudoku solver.\n  let solver = new SudokuSolver();\n  app.route('/api/check').post((req, res) => {\n    // Inputs.\n    let puzzle = req.body.puzzle;\n    let coord = req.body.coordinate;\n    let val = req.body.value;\n\n    // Check input fields exist.\n    if (puzzle == undefined | coord == undefined | val == undefined) return res.json({\n      \"error\": \"Required field(s) missing\"\n    });\n\n    // Test the inputs are valid.\n    let reCoord = /^([A-Ia-i])([1-9])$/;\n    let reVal = /^[1-9]$/;\n    let rePuz = /[^1-9\\.]/;\n    if (!reCoord.test(coord)) return res.json({\n      \"error\": \"Invalid coordinate\"\n    });\n    if (!reVal.test(val)) return res.json({\n      \"error\": \"Invalid value\"\n    });\n    if (puzzle.length != 81) return res.json({\n      \"error\": \"Expected puzzle to be 81 characters long\"\n    });\n    if (rePuz.test(puzzle)) return res.json({\n      \"error\": \"Invalid characters in puzzle\"\n    });\n\n    // Get the coordinate representation of the row and column.\n    let [_, row, col] = coord.match(reCoord);\n\n    // Test the value is already in that coordinate of the puzzle.\n    if (solver.checkDuplicateValue(puzzle, row, col, val)) return res.json({\n      \"valid\": true\n    });\n\n    // Determine if the value violates the row, column, and region sudoku rules.\n    let validRow = solver.checkRowPlacement(puzzle, row, col, val);\n    let validCol = solver.checkColPlacement(puzzle, row, col, val);\n    let validReg = solver.checkRegionPlacement(puzzle, row, col, val);\n    if (validRow & validCol & validReg) return res.json({\n      \"valid\": true\n    });\n\n    // Determine the conflicts (if they exist).\n    let conflict = [];\n    if (!validRow) conflict.push(\"row\");\n    if (!validCol) conflict.push(\"column\");\n    if (!validReg) conflict.push(\"region\");\n    return res.json({\n      \"valid\": false,\n      conflict\n    });\n  });\n  app.route('/api/solve').post((req, res) => {\n    // Inputs.\n    let puzzle = req.body.puzzle;\n\n    // Error if no puzzle is defined.\n    if (puzzle == undefined) return res.json({\n      error: 'Required field missing'\n    });\n\n    // Error if the puzzle has too many characters.\n    if (puzzle.length != 81) return res.json({\n      \"error\": \"Expected puzzle to be 81 characters long\"\n    });\n\n    // Error if the puzzle contains invalid characters.\n    let rePuz = /[^1-9\\.]/;\n    if (rePuz.test(puzzle)) return res.json({\n      \"error\": \"Invalid characters in puzzle\"\n    });\n\n    // Try to solve the puzzle.\n    let puzzleArr = [...puzzle];\n    // Error if it does not solve.\n    if (!solver.solve(puzzleArr)) return res.json({\n      \"error\": \"Puzzle cannot be solved\"\n    });\n    // Return the solution.\n    return res.json({\n      \"solution\": puzzleArr.join(\"\")\n    });\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJTdWRva3VTb2x2ZXIiLCJyZXF1aXJlIiwibW9kdWxlIiwiZXhwb3J0cyIsImFwcCIsInNvbHZlciIsInJvdXRlIiwicG9zdCIsInJlcSIsInJlcyIsInB1enpsZSIsImJvZHkiLCJjb29yZCIsImNvb3JkaW5hdGUiLCJ2YWwiLCJ2YWx1ZSIsInVuZGVmaW5lZCIsImpzb24iLCJyZUNvb3JkIiwicmVWYWwiLCJyZVB1eiIsInRlc3QiLCJsZW5ndGgiLCJfIiwicm93IiwiY29sIiwibWF0Y2giLCJjaGVja0R1cGxpY2F0ZVZhbHVlIiwidmFsaWRSb3ciLCJjaGVja1Jvd1BsYWNlbWVudCIsInZhbGlkQ29sIiwiY2hlY2tDb2xQbGFjZW1lbnQiLCJ2YWxpZFJlZyIsImNoZWNrUmVnaW9uUGxhY2VtZW50IiwiY29uZmxpY3QiLCJwdXNoIiwiZXJyb3IiLCJwdXp6bGVBcnIiLCJzb2x2ZSIsImpvaW4iXSwic291cmNlUm9vdCI6Ii9ob21lL3RzZWxnZXItNzA1MC9EZXNrdG9wL2ZjYy9yb3V0ZXMvIiwic291cmNlcyI6WyJhcGkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiJ3VzZSBzdHJpY3QnO1xuXG5jb25zdCBTdWRva3VTb2x2ZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9zdWRva3Utc29sdmVyLmpzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGFwcCkge1xuICBcbiAgLy8gR2V0IHRoZSBzdWRva3Ugc29sdmVyLlxuICBsZXQgc29sdmVyID0gbmV3IFN1ZG9rdVNvbHZlcigpO1xuXG4gIGFwcC5yb3V0ZSgnL2FwaS9jaGVjaycpXG4gICAgLnBvc3QoKHJlcSwgcmVzKSA9PiB7XG5cbiAgICAgIC8vIElucHV0cy5cbiAgICAgIGxldCBwdXp6bGUgPSByZXEuYm9keS5wdXp6bGU7XG4gICAgICBsZXQgY29vcmQgPSByZXEuYm9keS5jb29yZGluYXRlO1xuICAgICAgbGV0IHZhbCA9IHJlcS5ib2R5LnZhbHVlO1xuXG4gICAgICAvLyBDaGVjayBpbnB1dCBmaWVsZHMgZXhpc3QuXG4gICAgICBpZiAocHV6emxlPT11bmRlZmluZWQgfCBjb29yZD09dW5kZWZpbmVkIHwgdmFsPT11bmRlZmluZWQgKSByZXR1cm4gcmVzLmpzb24oeyBcImVycm9yXCI6IFwiUmVxdWlyZWQgZmllbGQocykgbWlzc2luZ1wiIH0pO1xuXG4gICAgICAvLyBUZXN0IHRoZSBpbnB1dHMgYXJlIHZhbGlkLlxuICAgICAgbGV0IHJlQ29vcmQgPSAvXihbQS1JYS1pXSkoWzEtOV0pJC87XG4gICAgICBsZXQgcmVWYWwgPSAvXlsxLTldJC87XG4gICAgICBsZXQgcmVQdXogPSAvW14xLTlcXC5dLztcbiAgICAgIGlmICghcmVDb29yZC50ZXN0KGNvb3JkKSkgcmV0dXJuIHJlcy5qc29uKHsgXCJlcnJvclwiOiBcIkludmFsaWQgY29vcmRpbmF0ZVwiIH0pO1xuICAgICAgaWYgKCFyZVZhbC50ZXN0KHZhbCkpIHJldHVybiByZXMuanNvbih7IFwiZXJyb3JcIjogXCJJbnZhbGlkIHZhbHVlXCIgfSk7XG4gICAgICBpZiAocHV6emxlLmxlbmd0aCAhPSA4MSkgcmV0dXJuIHJlcy5qc29uKHsgXCJlcnJvclwiOiBcIkV4cGVjdGVkIHB1enpsZSB0byBiZSA4MSBjaGFyYWN0ZXJzIGxvbmdcIiB9KTtcbiAgICAgIGlmIChyZVB1ei50ZXN0KHB1enpsZSkpIHJldHVybiByZXMuanNvbih7IFwiZXJyb3JcIjogXCJJbnZhbGlkIGNoYXJhY3RlcnMgaW4gcHV6emxlXCIgfSk7XG4gICAgICBcbiAgICAgIC8vIEdldCB0aGUgY29vcmRpbmF0ZSByZXByZXNlbnRhdGlvbiBvZiB0aGUgcm93IGFuZCBjb2x1bW4uXG4gICAgICBsZXQgW18sIHJvdywgY29sXSA9IGNvb3JkLm1hdGNoKHJlQ29vcmQpO1xuICAgICAgXG4gICAgICAvLyBUZXN0IHRoZSB2YWx1ZSBpcyBhbHJlYWR5IGluIHRoYXQgY29vcmRpbmF0ZSBvZiB0aGUgcHV6emxlLlxuICAgICAgaWYgKHNvbHZlci5jaGVja0R1cGxpY2F0ZVZhbHVlKHB1enpsZSxyb3cgLGNvbCwgdmFsKSkgcmV0dXJuIHJlcy5qc29uKHsgXCJ2YWxpZFwiOiB0cnVlIH0pO1xuXG4gICAgICAvLyBEZXRlcm1pbmUgaWYgdGhlIHZhbHVlIHZpb2xhdGVzIHRoZSByb3csIGNvbHVtbiwgYW5kIHJlZ2lvbiBzdWRva3UgcnVsZXMuXG4gICAgICBsZXQgdmFsaWRSb3cgPSBzb2x2ZXIuY2hlY2tSb3dQbGFjZW1lbnQocHV6emxlLHJvdyAsY29sLCB2YWwpO1xuICAgICAgbGV0IHZhbGlkQ29sID0gc29sdmVyLmNoZWNrQ29sUGxhY2VtZW50KHB1enpsZSwgcm93LCBjb2wsIHZhbCk7XG4gICAgICBsZXQgdmFsaWRSZWcgPSBzb2x2ZXIuY2hlY2tSZWdpb25QbGFjZW1lbnQocHV6emxlLCByb3cgLGNvbCwgdmFsKTtcbiAgICAgIGlmICh2YWxpZFJvdyAmIHZhbGlkQ29sICYgdmFsaWRSZWcpIHJldHVybiByZXMuanNvbih7IFwidmFsaWRcIjogdHJ1ZSB9KTtcblxuICAgICAgLy8gRGV0ZXJtaW5lIHRoZSBjb25mbGljdHMgKGlmIHRoZXkgZXhpc3QpLlxuICAgICAgbGV0IGNvbmZsaWN0ID0gW107XG4gICAgICBpZiAoIXZhbGlkUm93KSBjb25mbGljdC5wdXNoKFwicm93XCIpO1xuICAgICAgaWYgKCF2YWxpZENvbCkgY29uZmxpY3QucHVzaChcImNvbHVtblwiKTtcbiAgICAgIGlmICghdmFsaWRSZWcpIGNvbmZsaWN0LnB1c2goXCJyZWdpb25cIik7XG5cbiAgICAgIHJldHVybiByZXMuanNvbih7IFwidmFsaWRcIjogZmFsc2UsIGNvbmZsaWN0IH0pO1xuICAgIH0pO1xuICAgIFxuICBhcHAucm91dGUoJy9hcGkvc29sdmUnKVxuICAgIC5wb3N0KChyZXEsIHJlcykgPT4ge1xuICAgICAgLy8gSW5wdXRzLlxuICAgICAgbGV0IHB1enpsZSA9IHJlcS5ib2R5LnB1enpsZTtcblxuICAgICAgLy8gRXJyb3IgaWYgbm8gcHV6emxlIGlzIGRlZmluZWQuXG4gICAgICBpZiAocHV6emxlID09IHVuZGVmaW5lZCkgcmV0dXJuIHJlcy5qc29uKHtlcnJvcjogJ1JlcXVpcmVkIGZpZWxkIG1pc3NpbmcnfSk7XG4gICAgICBcbiAgICAgIC8vIEVycm9yIGlmIHRoZSBwdXp6bGUgaGFzIHRvbyBtYW55IGNoYXJhY3RlcnMuXG4gICAgICBpZiAocHV6emxlLmxlbmd0aCAhPSA4MSkgcmV0dXJuIHJlcy5qc29uKHsgXCJlcnJvclwiOiBcIkV4cGVjdGVkIHB1enpsZSB0byBiZSA4MSBjaGFyYWN0ZXJzIGxvbmdcIiB9KTtcblxuICAgICAgLy8gRXJyb3IgaWYgdGhlIHB1enpsZSBjb250YWlucyBpbnZhbGlkIGNoYXJhY3RlcnMuXG4gICAgICBsZXQgcmVQdXogPSAvW14xLTlcXC5dLztcbiAgICAgIGlmIChyZVB1ei50ZXN0KHB1enpsZSkpIHJldHVybiByZXMuanNvbih7IFwiZXJyb3JcIjogXCJJbnZhbGlkIGNoYXJhY3RlcnMgaW4gcHV6emxlXCIgfSk7XG5cbiAgICAgIC8vIFRyeSB0byBzb2x2ZSB0aGUgcHV6emxlLlxuICAgICAgbGV0IHB1enpsZUFyciA9IFsuLi5wdXp6bGVdO1xuICAgICAgLy8gRXJyb3IgaWYgaXQgZG9lcyBub3Qgc29sdmUuXG4gICAgICBpZiAoIXNvbHZlci5zb2x2ZShwdXp6bGVBcnIpKSByZXR1cm4gcmVzLmpzb24oeyBcImVycm9yXCI6IFwiUHV6emxlIGNhbm5vdCBiZSBzb2x2ZWRcIiB9KTtcbiAgICAgIC8vIFJldHVybiB0aGUgc29sdXRpb24uXG4gICAgICByZXR1cm4gcmVzLmpzb24oeyBcInNvbHV0aW9uXCI6ICBwdXp6bGVBcnIuam9pbihcIlwiKX0pO1xuICAgIH0pO1xufTtcbiJdLCJtYXBwaW5ncyI6IkFBQUEsWUFBWTs7QUFFWixNQUFNQSxZQUFZLEdBQUdDLE9BQU8sQ0FBQyxpQ0FBaUMsQ0FBQztBQUUvREMsTUFBTSxDQUFDQyxPQUFPLEdBQUcsVUFBVUMsR0FBRyxFQUFFO0VBRTlCO0VBQ0EsSUFBSUMs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","map":{"version":3,"names":["SudokuSolver","require","module","exports","app","solver","route","post","req","res","puzzle","body","coord","coordinate","val","value","undefined","json","reCoord","reVal","rePuz","test","length","_","row","col","match","checkDuplicateValue","validRow","checkRowPlacement","validCol","checkColPlacement","validReg","checkRegionPlacement","conflict","push","error","puzzleArr","solve","join"],"sourceRoot":"/home/tselger-7050/Desktop/fcc/routes/","sources":["api.js"],"sourcesContent":["'use strict';\n\nconst SudokuSolver = require('../controllers/sudoku-solver.js');\n\nmodule.exports = function (app) {\n  \n  // Get the sudoku solver.\n  let solver = new SudokuSolver();\n\n  app.route('/api/check')\n    .post((req, res) => {\n\n      // Inputs.\n      let puzzle = req.body.puzzle;\n      let coord = req.body.coordinate;\n      let val = req.body.value;\n\n      // Check input fields exist.\n      if (puzzle==undefined | coord==undefined | val==undefined ) return res.json({ \"error\": \"Required field(s) missing\" });\n\n      // Test the inputs are valid.\n      let reCoord = /^([A-Ia-i])([1-9])$/;\n      let reVal = /^[1-9]$/;\n      let rePuz = /[^1-9\\.]/;\n      if (!reCoord.test(coord)) return res.json({ \"error\": \"Invalid coordinate\" });\n      if (!reVal.test(val)) return res.json({ \"error\": \"Invalid value\" });\n      if (puzzle.length != 81) return res.json({ \"error\": \"Expected puzzle to be 81 characters long\" });\n      if (rePuz.test(puzzle)) return res.json({ \"error\": \"Invalid characters in puzzle\" });\n      \n      // Get the coordinate representation of the row and column.\n      let [_, row, col] = coord.match(reCoord);\n      \n      // Test the value is already in that coordinate of the puzzle.\n      if (solver.checkDuplicateValue(puzzle,row ,col, val)) return res.json({ \"valid\": true });\n\n      // Determine if the value violates the row, column, and region sudoku rules.\n      let validRow = solver.checkRowPlacement(puzzle,row ,col, val);\n      let validCol = solver.checkColPlacement(puzzle, row, col, val);\n      let validReg = solver.checkRegionPlacement(puzzle, row ,col, val);\n      if (validRow & validCol & validReg) return res.json({ \"valid\": true });\n\n      // Determine the conflicts (if they exist).\n      let conflict = [];\n      if (!validRow) conflict.push(\"row\");\n      if (!validCol) conflict.push(\"column\");\n      if (!validReg) conflict.push(\"region\");\n\n      return res.json({ \"valid\": false, conflict });\n    });\n    \n  app.route('/api/solve')\n    .post((req, res) => {\n      // Inputs.\n      let puzzle = req.body.puzzle;\n\n      // Error if no puzzle is defined.\n      if (puzzle == undefined) return res.json({error: 'Required field missing'});\n      \n      // Error if the puzzle has too many characters.\n      if (puzzle.length != 81) return res.json({ \"error\": \"Expected puzzle to be 81 characters long\" });\n\n      // Error if the puzzle contains invalid characters.\n      let rePuz = /[^1-9\\.]/;\n      if (rePuz.test(puzzle)) return res.json({ \"error\": \"Invalid characters in puzzle\" });\n\n      // Try to solve the puzzle.\n      let puzzleArr = [...puzzle];\n      // Error if it does not solve.\n      if (!solver.solve(puzzleArr)) return res.json({ \"error\": \"Puzzle cannot be solved\" });\n      // Return the solution.\n      return res.json({ \"solution\":  puzzleArr.join(\"\")});\n    });\n};\n"],"mappings":"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"}},"mtime":1631298864000}}